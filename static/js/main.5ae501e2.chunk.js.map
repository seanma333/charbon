{"version":3,"sources":["components/common.js","components/origin_step.js","components/abilities_step.js","components/creator.js","App.js","reportWebVitals.js","index.js"],"names":["DiceRoller","inputRoll","this","diceRolls","roll","replace","test","match","exec","push","numDice","parseInt","diceSize","action","static","diceRegexp","console","log","rolls","n","highest","sort","a","b","slice","reduce","total","rollResults","i","Math","floor","random","keepNRolls","length","initializeFeature","feature","source","id","name","toLowerCase","replaceAll","hasOwnProperty","complete","choices","map","choice","selected","FeatureCardSelections","props","title","options","onSelect","onUpdate","onRemove","selectionLimit","limit","selectedValues","preselected","displayValue","showCheckbox","avoidHighlightFirstOption","hidePlaceholder","closeOnSelecte","FeatureCard","data","featureTypes","types","state","every","c","type","num_abilities","num_languages","num_skills","num_tools","setState","display","Object","entries","abilityScores","filter","excludes","includes","key","increase","languages","l","skills","k","v","ability","shortName","s","tools","t","selections","updateFeatureState","descriptionComponent","parse","description","renderChoices","border","Card","className","Title","Body","Row","React","Component","Description","SaveButton","enabled","Button","variant","onClick","value","disabled","OptionSelector","OptionList","keys","option","OriginEditor","originData","featureData","origin","suborigin","current","originStep","availableSuborigins","suborigins","selectedOriginFeatures","features","f","selectedSuboriginFeatures","selectedOrigin","selectedSuborigin","f1","f2","c1","selectSuborigin","originFeatures","noSuborigins","suboriginFeatures","suboriginData","Col","md","lg","renderSelected","Container","selectOrigin","OriginStep","saveable","stepIsComplete","forEach","handleSave","Modal","size","show","onHide","handleClose","scrollable","Header","updateOrigin","Footer","saveOrigin","DiceView","ArrayViewer","arraySize","diceArray","roller","onRoll","array","fluid","h25","rollDiceArray","renderDice","PointBuyViewer","pointsLeft","ArraySelector","available","arrayUsed","used","splice","findIndex","arrayOptions","Form","Control","as","onChange","e","target","PointBuySelector","max","getMax","updateValue","min","ScoreSelector","selectorBody","style","isActive","selector","isArray","bonus","totalScore","totalMod","textCenter","AbilityScoreEditor","abilityScoreData","methods","carbonRoll","displayName","carbonArray","dndRoll","dndPointBuy","rolling","arrayGenerated","bonuses","ability_score_increase","asi","abilitiesStep","selectedScores","baseAbilities","selectedMethod","generationMethod","calculatePointTotal","values","d","method","updateSaveable","pointCosts","score","scores","methodOptions","m","hidden","scoreSelectors","scoreData","toUpperCase","updateScore","statusView","updateArray","Group","Label","changeMethod","AbilitiesStep","abilityKeys","update","updateAbilityScores","saveAbilityScores","StepButton","buttonName","split","charAt","substring","join","status","CharacterNameComponent","onSave","placeholderText","edit","editingName","event","placeholder","handleChange","saveName","plaintext","readOnly","defaultValue","toggleEdit","CharacterDisplay","displayCharacter","JSON","stringify","character","Creator","steps","getBaseCharacter","age","openStep","char","baseCharacterValues","level","stepName","result","step","updateNext","newFeatures","buildCharacter","closeStep","build","adjustProficiencies","proficiencyType","proficiencies","p","age_range","base_speed","speed","climb_speed","skill_proficiencies","tool_proficiencies","weapon_proficiencies","armor_proficiencies","senses","sense","range","darkvision_range","weapon_overrides","weapon_type","weapon_override","natural_armor","natural_base_ac","damage_types","bonus_actions","influence","baseInfluence","abilityMods","armor","helmet","armorStats","category","ac","base_ac","dexterity","helmetStats","proficiency","skillMods","skill","halfBonus","skill_half_proficiencies","round","profBonus","expertiseBonus","skill_expertise","weapons","attacks","w","weapon","prop","override","abilityMod","properties","strength","attackBonus","some","damageRoll","damage_dice","damageType","damage_type","renderStepButtons","saveCharacterName","origins","saveStep","App","snakeToCamel","str","group","loaded","Promise","all","fetch","headers","then","resp","json","r","fetchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAMMA,E,WAEJ,WAAYC,GAAY,oBAEtBC,KAAKC,UAAY,GAGjB,IAAMC,EAAOH,EAAUI,QAAQ,OAAQ,IAEvC,GAAM,iEAAiEC,KAAKF,GAA5E,CAKA,IAAIG,EAAQ,gCAAgCC,KAAKJ,GAEjD,GAAIG,EACFL,KAAKC,UAAUM,KAAK,CAClBC,QAASC,SAASJ,EAAM,IACxBK,SAAUD,SAASJ,EAAM,IACzBM,OAAQN,EAAM,GACdO,OAAQH,SAASJ,EAAM,WAIzB,IADA,IAAMQ,EAAa,gCACXR,EAAQQ,EAAWP,KAAKJ,IAC1BG,EAAM,GACRL,KAAKC,UAAUM,KAAK,CAClBC,QAASH,EAAM,GAAKI,SAASJ,EAAM,IAAM,EACzCK,SAAUD,SAASJ,EAAM,IACzBM,OAAQN,EAAM,GAAKA,EAAM,GAAK,IAC9BO,OAAQ,IAEDP,EAAM,IACfL,KAAKC,UAAUM,KAAK,CAClBC,QAAS,EACTE,SAAU,EACVC,OAAQN,EAAM,GAAKA,EAAM,GAAK,IAC9BO,OAAQH,SAASJ,EAAM,WA5B7BS,QAAQC,IAAI,uBAAyBb,G,8CAmCzC,SAAWc,EAAOC,EAAGC,GAKnB,OAJAF,EAAMG,MAAK,SAACC,EAAEC,GACZ,OAAIH,EAAiBG,EAAED,EACVA,EAAEC,KAEVL,EAAMM,MAAM,EAAEL,K,kBAGvB,WAAQ,IAAD,OACL,OAAOjB,KAAKC,UAAUsB,QAAO,SAACC,EAAMtB,GAGlC,IADA,IAAMuB,EAAc,GACXC,EAAE,EAAGA,EAAIxB,EAAKM,QAASkB,IAC9BD,EAAYlB,KAAKoB,KAAKC,MAAMD,KAAKE,SAAW3B,EAAKQ,UAAY,GAG/D,OAAQR,EAAKS,QACX,IAAK,IACH,OAAQa,EAAQC,EAAYF,QAAO,SAACH,EAAEC,GAAH,OAASD,EAAIC,IAAG,GAAKnB,EAAKU,OAC/D,IAAK,IACH,OAAOY,GAASC,EAAYF,QAAO,SAACH,EAAEC,GAAH,OAASD,EAAIC,IAAG,GAAKnB,EAAKU,QAC/D,IAAK,KACH,OAAOY,EAAQ,EAAKM,WAAWL,EAAaA,EAAYM,OAAO7B,EAAKU,QAAQ,GAAMW,QAAO,SAACH,EAAEC,GAAH,OAASD,EAAIC,IAAG,GAC3G,IAAK,KACH,OAAOG,EAAQ,EAAKM,WAAWL,EAAavB,EAAKU,QAAQ,GAAMW,QAAO,SAACH,EAAEC,GAAH,OAASD,EAAIC,KACrF,IAAK,KACH,OAAOG,EAAQ,EAAKM,WAAWL,EAAaA,EAAYM,OAAO7B,EAAKU,QAAQ,GAAOW,QAAO,SAACH,EAAEC,GAAH,OAASD,EAAIC,IAAG,GAC5G,IAAK,KACH,OAAOG,EAAQ,EAAKM,WAAWL,EAAavB,EAAKU,QAAQ,GAAOW,QAAO,SAACH,EAAEC,GAAH,OAASD,EAAIC,KACtF,QAEE,OADAP,QAAQC,IAAI,mBAAqBb,EAAKS,QAC/Ba,KAEV,O,KAIP,SAASQ,EAAkBC,EAASC,GAYlC,OAVAD,EAAQE,GAAKD,EAAS,IAAMD,EAAQG,KAAKC,cAAcC,WAAW,IAAK,KACnEL,EAAQM,eAAe,YACzBN,EAAQO,UAAW,EACnBP,EAAQQ,QAAUR,EAAQQ,QAAQC,KAAI,SAAAC,GAEpC,OADAA,EAAOC,SAAW,GACXD,MAGTV,EAAQO,UAAW,EAEdP,EAGT,SAASY,EAAsBC,GAC7B,OACE,gCACE,6BAAiBA,EAAMC,OAAf,SACR,cAAC,cAAD,CAEEC,QAASF,EAAML,QACfQ,SAAUH,EAAMI,SAChBC,SAAUL,EAAMI,SAChBE,eAAgBN,EAAMO,MACtBC,eAAgBR,EAAMS,YACtBC,aAAa,cACbC,cAAc,EACdC,2BAA2B,EAC3BC,iBAAiB,EACjBC,gBAAgB,GAVXd,EAAMX,O,IAgBb0B,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,KAAO,EAAKhB,MAAMgB,KACvB,EAAK7B,QAAU,EAAKa,MAAMb,QAC1B,EAAKiB,SAAW,EAAKJ,MAAMI,SAC3B,EAAKa,aAAe,EAAK9B,QAAQ+B,MACjC,EAAKC,MAAQ,CACXzB,SAAU,EAAKA,UAPA,E,sDAWnB,WAAsB,IAAD,OACdxC,KAAKiC,QAAQM,eAAe,aAE7BvC,KAAKiC,QAAQQ,QAAQyB,OAAM,SAAAC,GAC7B,OAAQA,EAAEC,MACR,IAAK,MACH,OAAOD,EAAEE,gBAAkBF,EAAEvB,SAASb,OACxC,IAAK,uBACH,OAAOoC,EAAEG,gBAAkBH,EAAEvB,SAASb,OACxC,IAAK,oBACH,OAAOoC,EAAEI,aAAeJ,EAAEvB,SAASb,OACrC,IAAK,mBACH,OAAOoC,EAAEK,YAAcL,EAAEvB,SAASb,OACpC,QACE,OAAO,MAGX/B,KAAKiC,QAAQO,UAAW,EAExBxC,KAAKiC,QAAQO,UAAW,EAE1BxC,KAAKyE,UAAS,SAAAR,GAEZ,OADAA,EAAMzB,SAAW,EAAKP,QAAQO,SACvByB,KAGTjE,KAAK8C,MAAMI,SAASlD,KAAKiC,Y,2BAG3B,WAAiB,IAAD,OACd,OAAKjC,KAAKiC,QAAQM,eAAe,WAIG,IAAhCvC,KAAKiC,QAAQQ,QAAQV,OAChB,wBAIP/B,KAAKiC,QAAQQ,QAAQC,KAAI,SAAAC,GACvB,IAAI+B,EAAU,UACVjC,EAAU,GACVc,EAAcZ,EAAOC,SACrBS,EAAQ,KAEZ,OAAQV,EAAOyB,MACb,IAAK,MACH3B,EAAUkC,OAAOC,QAAQ,EAAKd,KAAKe,eAAenC,KAAK,YAAY,IAAD,mBAChE,MAAO,CAAC,IADwD,KAC9C,YAD8C,KAC7BN,SAClC0C,QAAO,SAAA1D,GAAC,OAAKuB,EAAOoC,SAASC,SAAS5D,EAAE6D,QAGzCP,GADY,KADdrB,EAAQV,EAAO0B,eAEF,mCAAqC1B,EAAOuC,SAE5CvC,EAAO0B,cAAgB,kCAAoC1B,EAAOuC,SAE/E,MACF,IAAK,uBACHzC,EAAUkC,OAAOC,QAAQ,EAAKd,KAAKqB,WAAWzC,KAAI,YAAY,IAAD,mBAC3D,MAAO,CAAE,IADkD,KACxC,YADwC,KACvBN,SACnC0C,QAAO,SAAAM,GAAC,OAAKzC,EAAOoC,SAASC,SAASI,EAAEH,QAGzCP,GADY,KADdrB,EAAQV,EAAO2B,eAEF,aAEA3B,EAAO2B,cAAgB,aAEpC,MACF,IAAK,oBACH7B,EAAUkC,OAAOC,QAAQ,EAAKd,KAAKuB,QAAQ3C,KAAI,YAAY,IAAD,mBAAT4C,EAAS,KAAPC,EAAO,KAExD,MAAO,CAAC,IAAOD,EAAG,YADEC,EAAEnD,KAAO,KAAO,EAAK0B,KAAKe,cAAcU,EAAEC,SAASC,UAAY,QAElFX,QAAO,SAAAY,GAAC,OAAK/C,EAAOoC,SAASC,SAASU,EAAET,QAGzCP,GADY,KADdrB,EAAQV,EAAO4B,YAEF,UAEA5B,EAAO4B,WAAa,UAEjC,MACF,IAAK,mBACH9B,EAAUkC,OAAOC,QAAQ,EAAKd,KAAK6B,OAAOjD,KAAI,YAAY,IAAD,mBACvD,MAAO,CAAC,IAD+C,KACrC,YADqC,KACpBN,SAClC0C,QAAO,SAAAc,GAAC,OAAKjD,EAAOoC,SAASC,SAASY,EAAEX,QAGzCP,GADY,KADdrB,EAAQV,EAAO6B,WAEF,SAEA7B,EAAO6B,UAAY,SAEhC,MACF,QACE,OAAO,wBAEX,OACE,cAAC3B,EAAD,CACEV,GAAI,EAAKF,QAAQE,GACjBY,MAAO2B,EACPjC,QAASA,EACTc,YAAaA,EACbF,MAAOA,EACPH,SAAU,SAAC2C,GACTlD,EAAOC,SAAWiD,EAClB,EAAKC,2BAxEN,0B,oBAiFX,WACE,IAAMC,EAAuBC,YAAMhG,KAAKiC,QAAQgE,aAC1CxD,EAAUzC,KAAKkG,gBACfC,EAASnG,KAAKiC,QAAQO,SAAW,UAAY,YAEnD,OACE,8BACE,eAAC4D,EAAA,EAAD,CAAMD,OAAQA,EAAQE,UAAU,eAAhC,UACE,cAACD,EAAA,EAAKE,MAAN,UAAatG,KAAKiC,QAAQG,OAC1B,eAACgE,EAAA,EAAKG,KAAN,WACE,cAACC,EAAA,EAAD,UAAwBT,GAAf,eACT,cAACS,EAAA,EAAD,UAAoB/D,GAAX,kBALLzC,KAAKiC,QAAQE,Q,GAlIHsE,IAAMC,WA+JhC,SAASC,EAAY7D,GACnB,GAAmB,OAAfA,EAAMV,KACR,OAAO,wBAET,IAAM2D,EAAuBC,YAAMlD,EAAMmD,aACzC,OACE,sBAAKI,UAAU,cAAf,UACE,6BAAKvD,EAAMV,OACV2D,KAKP,SAASa,EAAW9D,GAElB,OAAIA,EAAM+D,QACD,cAACC,EAAA,EAAD,CAAQT,UAAU,aAAaU,QAAQ,UAAUC,QAASlE,EAAMkE,QAAhE,SACElE,EAAMmE,QAGR,cAACH,EAAA,EAAD,CAAQT,UAAU,aAAaU,QAAQ,UAAUG,UAAQ,EAAzD,SAA2DpE,EAAMmE,QAI5E,SAASE,EAAerE,GACtB,IAAMiE,EAAUjE,EAAMF,SAAW,UAAY,kBAC7C,OAAO,cAACkE,EAAA,EAAD,CAAQT,UAAU,WAAWU,QAASA,EAASC,QAASlE,EAAMkE,QAA9D,SAAwElE,EAAMmE,QAGvF,SAASG,EAAWtE,GAElB,OADgB6B,OAAO0C,KAAKvE,EAAME,SACnBN,KACb,SAAA4E,GACE,OACE,cAACd,EAAA,EAAD,UACE,cAACW,EAAD,CACEF,MAAOnE,EAAME,QAAQsE,GAAQlF,KAC7BQ,SAAU0E,IAAWxE,EAAMF,SAC3BoE,QAAS,kBAAMlE,EAAMkE,QAAQM,OAJvBA,M,YCvTZC,E,kDACJ,WAAYzE,GAAQ,IAAD,uBACjB,cAAMA,IACD0E,WAAa1E,EAAMgB,KACxB,EAAK2D,YAAc3E,EAAM2E,YAEzB,IAAIC,EAAS,KACTC,EAAY,KANC,OAOb7E,EAAM8E,QAAQC,YAChBH,EAAS5E,EAAM8E,QAAQC,WAAWH,OAClCC,EAAY7E,EAAM8E,QAAQC,WAAWF,UACrC,EAAKG,oBAAsB,EAAKN,WAAWE,GAAQK,WACnD,EAAKC,uBAAyBlF,EAAM8E,QAAQK,SAASnD,QAAO,SAAAoD,GAAC,MAAiB,WAAbA,EAAEhG,UACnE,EAAKiG,0BAA4BrF,EAAM8E,QAAQK,SAASnD,QAAO,SAAAoD,GAAC,MAAiB,cAAbA,EAAEhG,YAEtE,EAAK4F,oBAAsB,GAC3B,EAAKE,uBAAyB,GAC9B,EAAKG,0BAA4B,IAEnC,EAAKlE,MAAQ,CACXmE,eAAgBV,EAChBW,kBAAmBV,GApBJ,E,gDAwBnB,SAAaD,GACX,IAAIO,EAAW,GACA,OAAXP,GAAmB1H,KAAKwH,WAAWjF,eAAemF,KACpDO,EAAWjI,KAAKwH,WAAWE,GAAQO,SAASvF,KAAI,SAAAwF,GAAC,OAAIlG,EAAkBkG,EAAG,UAAYR,OAExF1H,KAAKgI,uBAAyBC,EAC9BjI,KAAKgI,uBAAuB7G,MAAK,SAACmH,EAAIC,GACpC,IAAMC,EAAKF,EAAG/F,eAAe,WAAa+F,EAAG7F,QAAQV,OAAS,EAE9D,OADWwG,EAAGhG,eAAe,WAAagG,EAAG9F,QAAQV,OAAS,GAClDyG,KAGVxI,KAAKwH,WAAWE,GAAQnF,eAAe,cACzCvC,KAAK8H,oBAAsB9H,KAAKwH,WAAWE,GAAQK,WAEnD/H,KAAK8H,oBAAsB,GAG7B9H,KAAKmI,0BAA4B,GACjCnI,KAAKyE,SAAS,CACZ2D,eAAgBV,EAChBe,gBAAiB,MAChBzI,KAAKkD,Y,6BAGV,SAAgByE,GACd,IAAIM,EAAW,GACG,OAAdN,GAAsB3H,KAAK8H,oBAAoBvF,eAAeoF,KAChEM,EAAWjI,KAAK8H,oBAAoBH,GAAWM,SAASvF,KAAI,SAAAwF,GAAC,OAAIlG,EAAkBkG,EAAG,aAAeP,OAGvG3H,KAAKmI,0BAA4BF,EACjCjI,KAAKmI,0BAA0BhH,MAAK,SAACmH,EAAIC,GACvC,IAAMC,EAAKF,EAAG/F,eAAe,WAAa+F,EAAG7F,QAAQV,OAAS,EAE9D,OADWwG,EAAGhG,eAAe,WAAagG,EAAG9F,QAAQV,OAAS,GAClDyG,KAEdxI,KAAKyE,SAAS,CACZ2D,eAAgBpI,KAAKiE,MAAMmE,eAC3BC,kBAAmBV,GAClB3H,KAAKkD,Y,sBAGV,WACElD,KAAK8C,MAAMI,SAAS,CAClBwE,OAAQ1H,KAAKiE,MAAMmE,eACnBM,eAAgB1I,KAAKgI,uBACrBW,aAAkE,IAApDhE,OAAOC,QAAQ5E,KAAK8H,qBAAqB/F,OACvD4F,UAAW3H,KAAKiE,MAAMoE,kBACtBO,kBAAmB5I,KAAKmI,8B,4BAI5B,WAAkB,IAAD,OACTC,EAAiBpI,KAAKiE,MAAMmE,eAC5BC,EAAoBrI,KAAKiE,MAAMoE,kBACrC,GAAuB,OAAnBD,KAA6BA,KAAkBpI,KAAKwH,YACtD,OAAO,wBAET,IAAMA,EAAaxH,KAAKwH,WAAWY,GAC/BS,EAAgB,CAACzG,KAAM,KAAM6D,YAAa,MACpB,OAAtBoC,GAA8BA,KAAqBrI,KAAK8H,sBAC1De,EAAgB7I,KAAK8H,oBAAoBO,IAG3C,IAAMK,EAAiB1I,KAAKgI,uBAAuBtF,KAAI,SAAAwF,GAAC,OACpD,cAAC1B,EAAA,EAAD,UACE,cAAC,EAAD,CAAavE,QAASiG,EAAGpE,KAAM,EAAK2D,YAAavE,SAAU,kBAAM,EAAKA,eAD9DgF,EAAE/F,OAIVyG,EAAoB5I,KAAKmI,0BAA0BzF,KAAI,SAAAwF,GAAC,OAC5D,cAAC1B,EAAA,EAAD,UACE,cAAC,EAAD,CAAavE,QAASiG,EAAGpE,KAAM,EAAK2D,YAAavE,SAAU,kBAAM,EAAKA,eAD9DgF,EAAE/F,OAKd,OACE,gCACE,eAACqE,EAAA,EAAD,WACE,cAACsC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACpC,EAAD,CAAavE,KAAMoF,EAAWpF,KAAM6D,YAAauB,EAAWvB,gBAE9D,cAAC6C,EAAA,EAAD,CAAKE,GAAI,IACT,eAACF,EAAA,EAAD,CAAKE,GAAI,EAAT,UACE,cAACxC,EAAA,EAAD,UACE,cAACY,EAAD,CACEpE,QAAShD,KAAK8H,oBACdlF,SAAU5C,KAAKiE,MAAMoE,kBACrBrB,QAAS,SAAAW,GAAS,OAAI,EAAKc,gBAAgBd,QAG/C,cAACnB,EAAA,EAAD,UACE,cAACG,EAAD,CAAavE,KAAMyG,EAAczG,KAAM6D,YAAa4C,EAAc5C,sBAIxE,eAACO,EAAA,EAAD,WACE,cAACsC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACGL,IAEH,cAACI,EAAA,EAAD,CAAKC,GAAI,EAAT,SACGH,Y,oBAQX,WAAU,IAAD,OACDR,EAAiBpI,KAAKiJ,iBAC5B,OACE,cAACC,EAAA,EAAD,UACE,eAAC1C,EAAA,EAAD,WACE,cAACsC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC5B,EAAD,CACEpE,QAAShD,KAAKwH,WACd5E,SAAU5C,KAAKiE,MAAMmE,eACrBpB,QAAS,SAAAU,GAAM,OAAI,EAAKyB,aAAazB,QAGzC,cAACoB,EAAA,EAAD,CAAKE,GAAI,GAAT,SACGZ,a,GAnJc3B,IAAMC,WAwOlB0C,E,kDA5Eb,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IAEDF,SAAW,KAChB,EAAKqB,MAAQ,CACXoF,UAAU,GALK,E,gDASnB,SAAapC,GAMX,IAAIqC,GAAiB,EACrBtJ,KAAK4C,SAAWqE,EACa,OAAzBjH,KAAK4C,SAAS8E,QACd1H,KAAK4C,SAAS8F,eAAexE,OAAM,SAAAgE,GAAC,OAAIA,EAAE1F,cACzCxC,KAAK4C,SAAS+F,cACgB,OAA5B3I,KAAK4C,SAAS+E,WACd3H,KAAK4C,SAASgG,kBAAkB1E,OAAM,SAAAgE,GAAC,OAAIA,EAAE1F,eAGlD8G,GAAiB,GAGnBtJ,KAAKyE,SAAS,CACZ4E,SAAUC,M,wBAId,WACE,IAAM5B,EAAS,CACbA,OAAQ1H,KAAK4C,SAAS8E,OACtBC,UAAW3H,KAAK4C,SAAS+E,WAErBM,EAAWjI,KAAK4C,SAAS8F,eAAehG,KAAI,SAAAwF,GAEhD,OADAA,EAAC,OAAa,SACPA,KAEJlI,KAAK4C,SAAS+F,cACjB3I,KAAK4C,SAASgG,kBAAkBW,SAAQ,SAAArB,GACtCA,EAAC,OAAa,YACdD,EAAS1H,KAAK2H,MAGlBlI,KAAK8C,MAAM0G,WAAW,CACpB3B,WAAYH,EACZO,SAAUA,M,oBAId,WAAU,IAAD,OACP,OACE,eAACwB,EAAA,EAAD,CAAOpD,UAAU,cAAcqD,KAAK,KAAKC,KAAM3J,KAAK8C,MAAM6G,KAAMC,OAAQ5J,KAAK8C,MAAM+G,YAAaC,YAAY,EAA5G,UACE,cAACL,EAAA,EAAMM,OAAP,UACE,cAACN,EAAA,EAAMnD,MAAP,8BAEF,cAACmD,EAAA,EAAMlD,KAAP,CAAYF,UAAU,YAAtB,SACE,cAAC,EAAD,CACEvC,KAAM9D,KAAK8C,MAAMgB,KACjB2D,YAAazH,KAAK8C,MAAM2E,YACxBG,QAAS5H,KAAK8C,MAAM8E,QACpB1E,SAAU,SAAA+D,GAAK,OAAI,EAAK+C,aAAa/C,QAGzC,eAACwC,EAAA,EAAMQ,OAAP,WACE,cAACnD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAShH,KAAK8C,MAAM+G,YAAhD,mBACA,cAACjD,EAAD,CAAYK,MAAM,cAAcJ,QAAS7G,KAAKiE,MAAMoF,SAAUrC,QAAS,kBAAM,EAAKkD,0B,GAtEnEzD,IAAMC,WC7J/B,SAASyD,EAASrH,GAGhB,OACE,cAAC0D,EAAA,EAAD,UACE,cAACsC,EAAA,EAAD,CAAKzC,UAAU,yBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,uBAAf,SACGvD,EAAMmE,kB,IAUjBmD,E,mKAEJ,SAAcC,GAKZ,IAJA,IAAMC,EAAY,GAEZC,EAAS,IAAIzK,EAAWE,KAAK8C,MAAM5C,MAEhCwB,EAAE,EAAGA,EAAI2I,EAAW3I,IAC3B4I,EAAU/J,KAAKgK,EAAOrK,QAExBoK,EAAUnJ,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAED,KAC1BpB,KAAK8C,MAAM0H,OAAOF,K,wBAIpB,WACE,OAAOtK,KAAK8C,MAAM2H,MAAM/H,KAAI,SAAAtB,GAC1B,OAAO,cAAC+I,EAAD,CAAUlD,MAAO7F,S,oBAI5B,WAAU,IAAD,OACP,OACE,eAAC8H,EAAA,EAAD,CAAWwB,OAAK,EAAhB,UACE,cAAClE,EAAA,EAAD,CAAKmE,KAAG,EAACtE,UAAU,OAAnB,SACGrG,KAAK8C,MAAM5C,KAAO,qBAAKmG,UAAU,OAAf,SAAsB,cAACS,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAK4D,cAAc,IAA1C,SAA+C,QAAU5K,KAAK8C,MAAM5C,SAC7G,qBAAKmG,UAAU,WAEjB,cAACG,EAAA,EAAD,UACE,cAACsC,EAAA,EAAD,UAAM9I,KAAK6K,wB,GA7BKpE,IAAMC,WAoChC,SAASoE,EAAehI,GACtB,OACE,cAAC0D,EAAA,EAAD,CAAKH,UAAU,6CAAf,SACE,eAACyC,EAAA,EAAD,WACE,cAACtC,EAAA,EAAD,UAAK,+CACL,cAACA,EAAA,EAAD,UAAK,4BAAI1D,EAAMiI,oBAMvB,SAASC,EAAclI,GACrB,IAAMmI,EAAYnI,EAAM2H,MAAM/H,KAAI,SAAAtB,GAAC,OAAIA,KACvC0B,EAAMoI,UAAU3B,SAAQ,SAAA4B,GACtBF,EAAUG,OAAOH,EAAUI,WAAU,SAAAjK,GAAC,OAAIA,IAAM+J,KAAO,MAErDrI,EAAMF,WAAaqI,EAAUjG,SAASlC,EAAMF,YAC9CqI,EAAU1K,KAAKuC,EAAMF,UACrBqI,EAAU9J,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAID,MAG9B,IAAMkK,EAAeL,EAAUvI,KAAI,SAAAtB,GAAC,OAAI,wBAAQ6F,MAAO7F,EAAf,SAAmBA,OAG3D,OAFAkK,EAAa/K,KAAK,wBAAQ0G,MAAM,GAAd,iBAGhB,cAACsE,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAASxE,MAAOnE,EAAMF,SAAWE,EAAMF,SAAW,GAAI8I,SAAU,SAAAC,GAAC,OAAI7I,EAAM4I,SAASjL,SAASkL,EAAEC,OAAO3E,SAAvH,SACGqE,M,IAOHO,E,kDAEJ,WAAY/I,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXgD,MAAOnE,EAAMmE,OAHE,E,0CAOnB,WACE,OAAQjH,KAAK8C,MAAMgB,KAAKiH,YACtB,KAAK,EACH,OAAO/K,KAAKiE,MAAMgD,MACpB,KAAK,EACH,OAAIjH,KAAKiE,MAAMgD,MAAQ,GAAWjH,KAAK8C,MAAMmE,MACjCjH,KAAKiE,MAAMgD,MAAQ,EACjC,QACE,OAAO,M,yBAIb,SAAYA,GACV,IACM6E,EAAM9L,KAAK+L,SAGb9E,EAAQ6E,EAAK7E,EAAQ6E,EAChB7E,EALG,IAKUA,EALV,GAOZjH,KAAKyE,SAAS,CACZwC,MAAOA,IAITjH,KAAK8C,MAAM4I,SAASzE,K,sBAGtB,SAASA,GACO,MAAVA,GAEiB,KAAVA,GAIXjH,KAAKgM,YAAYvL,SAASwG,M,oBAG5B,SAAQA,GACQ,KAAVA,EACFjH,KAAKgM,YAAY,GAEjBhM,KAAKgM,YAAYvL,SAASwG,M,oBAK9B,WAAU,IAAD,OAED6E,EAAM9L,KAAK+L,SAEjB,OACE,cAACR,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,QAAN,CACEpH,KAAK,SACL6H,IAPM,EAQNH,IAAKA,EACL7E,MAAOjH,KAAKiE,MAAMgD,MAClByE,SAAU,SAAAC,GAAC,OAAI,EAAKD,SAASC,EAAEC,OAAO3E,QACtCyC,KAAK,a,GApEgBjD,IAAMC,WA2ErC,SAASwF,EAAcpJ,GAErB,IAAIqJ,EAAe,qBAAKC,MAAO,CAAC,UAAa,UAA1B,gBACnB,GAAItJ,EAAMgB,KAAKuI,SAAU,CACvB,IAAIC,EAAW,GAEbA,EADExJ,EAAMgB,KAAKyI,QAEX,cAACvB,EAAD,CACEP,MAAO3H,EAAMgB,KAAK2G,MAClBS,UAAWpI,EAAMgB,KAAKoH,UACtBtI,SAAUE,EAAMgB,KAAKlB,SACrB8I,SAAU,SAAAnG,GAAC,OAAIzC,EAAMG,SAAS,CAACH,EAAMsB,KAAMmB,OAGpC,cAAC,EAAD,CAAkB0B,MAAOnE,EAAMgB,KAAKlB,SAAUkB,KAAMhB,EAAMgB,KAAM4H,SAAU,SAAAnG,GAAC,OAAIzC,EAAMG,SAAS,CAACH,EAAMsB,KAAMmB,OAGxH,IAAMiH,EAAQ1J,EAAMgB,KAAK0I,MACrBhL,EAAQ,KACZ,GAAIsB,EAAMgB,KAAKlB,SAAU,CACvB,IAAM6J,EAAa3J,EAAMgB,KAAKlB,SAAW4J,EACnCE,EAAW/K,KAAKC,OAAO6K,EAAa,IAAM,GAE9CjL,EADEkL,EAAW,EACLD,EAAa,OAAUC,EAAY,IAEnCD,EAAa,MAAQC,EAAW,IAI5CP,EAAe,eAAC3F,EAAA,EAAD,WACb,cAACsC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAauD,IACb,cAACxD,EAAA,EAAD,CAAKC,GAAI,EAAG4D,YAAU,EAAtB,SAAwBH,EAAQ,EAAI,IAAM,MAC1C,cAAC1D,EAAA,EAAD,CAAKC,GAAI,EAAG4D,YAAU,EAAtB,SAAwBH,IACxB,cAAC1D,EAAA,EAAD,CAAKC,GAAI,EAAG4D,YAAU,EAAtB,eACA,cAAC7D,EAAA,EAAD,CAAKC,GAAI,EAAG4D,YAAU,EAAtB,SAAwBnL,OAI5B,OACE,cAAC4E,EAAA,EAAD,CAAMC,UAAU,6BAAhB,SACE,cAACD,EAAA,EAAKG,KAAN,UACE,eAAC2C,EAAA,EAAD,WACE,cAAC1C,EAAA,EAAD,UAAK,cAACJ,EAAA,EAAKE,MAAN,CAAY8F,MAAO,CAAC,UAAa,UAAjC,SAA6CtJ,EAAMV,SACxD,cAACoE,EAAA,EAAD,UACG2F,W,IASPS,E,kDACJ,WAAY9J,GAAQ,IAAD,EA4BjB,GA5BiB,qBACjB,cAAMA,IACD+J,iBAAmB/J,EAAMgB,KAC9B,EAAKgJ,QAAU,CACbC,WAAY,CAAEC,YAAa,gCAAiC,KAAQ,SACpEC,YAAa,CAAED,YAAa,gDAAiD,KAAQ,MACrFE,QAAS,CAAEF,YAAa,qCAAsC,KAAQ,UACtEG,YAAa,CAAEH,YAAa,+BAAgC,KAAQ,OAEtE,EAAKI,SAAU,EACf,EAAKC,gBAAiB,EAGtB,EAAKC,QAAU,GACf3I,OAAO0C,KAAK,EAAKwF,kBAAkBtD,SAAQ,SAAAnI,GAAC,OAAI,EAAKkM,QAAQlM,GAAG,KAChE0B,EAAM8E,QAAQK,SAASnD,QAAO,SAAAoD,GAAC,OAAIA,EAAElE,MAAMgB,SAAS,UAAQuE,SAAQ,SAAArB,GAC9DA,EAAE3F,eAAe,2BACnB2F,EAAEqF,uBAAuBhE,SAAQ,SAAAiE,GAAG,OAAI,EAAKF,QAAQE,EAAIhI,UAAYgI,EAAItI,YAEvEgD,EAAE3F,eAAe,YACnB2F,EAAEzF,QAAQqC,QAAO,SAAAX,GAAC,MAAe,QAAXA,EAAEC,QAAgBmF,SAAQ,SAAA5G,GAC9CA,EAAOC,SAAS2G,SAAQ,SAAA7D,GACtB,EAAK4H,QAAQ5H,EAAET,MAAQtC,EAAOuC,kBAMlCpC,EAAM8E,QAAQ6F,cAAe,CAC/B,EAAKC,eAAiB5K,EAAM8E,QAAQ+F,cACpC,IAAMC,EAAiB9K,EAAM8E,QAAQ6F,cAAcI,iBACnD,GAAuB,gBAAnBD,EACF,EAAK3J,MAAQ,CACX2J,eAAgBA,EAChBnD,MAAO,GACPS,UAAW,GACXH,WAAY,GAAK,EAAK+C,2BAEnB,CACL,EAAKV,QAA8B,eAAnBQ,GAAsD,YAAnBA,EACnD,EAAKP,gBAAiB,EACtB,IAAM5C,EAAQ9F,OAAOoJ,OAAO,EAAKL,gBACjCjD,EAAMtJ,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAED,KACtB,EAAK6C,MAAQ,CACX2J,eAAgBA,EAChBnD,MAAOA,EACPS,UAAWT,EACXM,WAAY,UAIhB,EAAK2C,eAAiB,GACtB/I,OAAO0C,KAAK,EAAKwF,kBAAkBtD,SAAQ,SAAAyE,GAAC,OAAI,EAAKN,eAAeM,GAAK,QAEzE,EAAK/J,MAAQ,CACX2J,eAAgB,KAChBnD,MAAO,GACPS,UAAW,GACXH,WAAY,IA1DC,S,gDA+DnB,SAAakD,GAAS,IAAD,OACfxD,EAAQ,GAIZ,OADA9F,OAAO0C,KAAKrH,KAAK6M,kBAAkBtD,SAAQ,SAAAyE,GAAC,OAAI,EAAKN,eAAeM,GAAK,QAClEC,GACL,IAAK,aACL,IAAK,UACHjO,KAAKoN,SAAU,EACfpN,KAAKqN,gBAAiB,EACtB5C,EAAQ,GACR,MACF,IAAK,cACHzK,KAAKoN,SAAU,EACfpN,KAAKqN,gBAAiB,EACtB5C,EAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GACxB,MACF,IAAK,cACHzK,KAAKoN,SAAU,EACfpN,KAAKqN,gBAAiB,EACtB5C,EAAQ,GACR9F,OAAO0C,KAAKrH,KAAK6M,kBAAkBtD,SAAQ,SAAAyE,GAAC,OAAI,EAAKN,eAAeM,GAAK,KACzE,MACF,QACE,OAGJhO,KAAKyE,SAAS,CACZmJ,eAAgBK,EAChBxD,MAAOA,EACPS,UAAW,GACXH,WAAY,KAEd/K,KAAKkO,mB,iCAGP,WACE,IAAMC,EAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAClC,OAAOxJ,OAAOoJ,OAAO/N,KAAK0N,gBAAgBnM,QAAO,SAACC,EAAO4M,GACvD,OAAIA,EAAQ,EAAU5M,EAClB4M,EAAQ,GAAW5M,GAAS,GAAG4M,EAAM,IAAI,GACtC5M,EAAQ2M,EAAWC,EAAM,KAC/B,K,yBAGL,SAAY5I,EAASyB,GACnB,IAAIiE,EAAYlL,KAAKiE,MAAMiH,UAAUxI,KAAI,SAAAtB,GAAC,OAAIA,KAC1C2J,EAAa/K,KAAKiE,MAAM8G,WAC5B,OAAO/K,KAAKiE,MAAM2J,gBAChB,IAAK,cACH5N,KAAK0N,eAAelI,GAAWyB,EAC/B8D,EAAa,GAAK/K,KAAK8N,sBACvB,MACF,IAAK,UACL,IAAK,aACL,IAAK,cACH9N,KAAK0N,eAAelI,GAAWyB,EAC/BiE,EAAYvG,OAAOoJ,OAAO/N,KAAK0N,gBAAgB5I,QAAO,SAAA1D,GAAC,OAAIA,KAC3D,MACF,QACE,OAGJpB,KAAKyE,SAAS,CACZmJ,eAAgB5N,KAAKiE,MAAM2J,eAC3BnD,MAAOzK,KAAKiE,MAAMwG,MAClBS,UAAWA,EACXH,WAAYA,IAGd/K,KAAKkO,mB,yBAGP,SAAYlN,GAAQ,IAAD,OAEjB2D,OAAO0C,KAAKrH,KAAK6M,kBAAkBtD,SAAQ,SAAAyE,GAAC,OAAI,EAAKN,eAAeM,GAAK,QACzEhO,KAAKqN,eAAkBrM,EAAMe,SAAW4C,OAAO0C,KAAKrH,KAAK6M,kBAAkB9K,OAC3E/B,KAAKyE,SAAS,CACZmJ,eAAgB5N,KAAKiE,MAAM2J,eAC3BnD,MAAOzJ,EACPkK,UAAW,GACXH,WAAY,KAEd/K,KAAKkO,mB,4BAGP,WAAkB,IAAD,OACX7E,EAAW1E,OAAO0C,KAAKrH,KAAK6M,kBAAkB3I,OAAM,SAAA9C,GAAC,OAAI,EAAKsM,eAAetM,MACjFpB,KAAK8C,MAAMI,SAAS,CAClBmL,OAAQrO,KAAK0N,eACbE,eAAgB5N,KAAKiE,MAAM2J,eAC3BvE,SAAUA,M,oBAId,WAAU,IAAD,OACDiF,EAAgB3J,OAAOC,QAAQ5E,KAAK8M,SAASpK,KAAI,YAAY,IAAD,mBAAT6L,EAAS,KAAPhJ,EAAO,KAChE,OAAO,wBAAQ0B,MAAOsH,EAAf,SAAmBhJ,EAAEyH,iBAE9BsB,EAAc/N,KAAK,wBAAQiO,QAAM,EAACvH,MAAM,GAArB,iBACnB,IAAMrE,EAAW5C,KAAKiE,MAAM2J,eAAiB5N,KAAKiE,MAAM2J,eAAiB,GAEnEa,EAAiB9J,OAAOC,QAAQ5E,KAAK6M,kBAAkBnK,KAAI,YAAe,IAAD,mBAAZ4C,EAAY,KAAVxB,EAAU,KAEvE4K,EAAY,GAClB,OAAQ,EAAKzK,MAAM2J,gBACjB,IAAK,aACL,IAAK,UACL,IAAK,cACHc,EAAUrC,SAAW,EAAKgB,eAC1BqB,EAAUnC,SAAU,EACpBmC,EAAU9L,SAAW,EAAK8K,eAAepI,GACzCoJ,EAAUjE,MAAQ,EAAKxG,MAAMwG,MAC7BiE,EAAUxD,UAAY,EAAKjH,MAAMiH,UACjCwD,EAAUlC,MAAQ,EAAKc,QAAQhI,GAC/B,MACF,IAAK,cACHoJ,EAAUrC,UAAW,EACrBqC,EAAUnC,SAAU,EACpBmC,EAAU9L,SAAW,EAAK8K,eAAepI,GACzCoJ,EAAU3D,WAAa,EAAK9G,MAAM8G,WAClC2D,EAAUlC,MAAQ,EAAKc,QAAQhI,GAC/B,MACF,QACEoJ,EAAUrC,UAAW,EAIzB,OAAO,cAAC7F,EAAA,EAAD,UAAK,cAAC0F,EAAD,CACV9J,KAAM0B,EAAK1B,KAAKuM,cAChB7K,KAAM4K,EACNtK,KAAMkB,EACNrC,SAAU,mCAAEqC,EAAF,KAAIC,EAAJ,YAAW,EAAKqJ,YAAYtJ,EAAEC,WAKxCsJ,EAAa,wBACjB,OAAQ7O,KAAKiE,MAAM2J,gBACjB,IAAK,cACHiB,EAAa,cAAC/D,EAAD,CAAgBC,WAAY/K,KAAKiE,MAAM8G,aACpD,MACF,IAAK,aACL,IAAK,UACL,IAAK,cACH8D,EACE,cAAC,EAAD,CACEpE,MAAOzK,KAAKiE,MAAMwG,MAClBS,UAAWlL,KAAKiE,MAAMiH,UACtBhL,KAAMF,KAAK8M,QAAQ9M,KAAKiE,MAAM2J,gBAAgB1N,KAC9CsK,OAAQ,SAAAxJ,GAAK,OAAI,EAAK8N,YAAY9N,MAO1C,OACE,eAACkI,EAAA,EAAD,WACE,cAAC1C,EAAA,EAAD,UACE,cAAC+E,EAAA,EAAD,UACE,eAACA,EAAA,EAAKwD,MAAN,WACE,cAACxD,EAAA,EAAKyD,MAAN,4CACE,cAACzD,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAASxE,MAAOrE,EAAU8I,SAAU,SAAAC,GAAC,OAAI,EAAKsD,aAAatD,EAAEC,OAAO3E,QAArF,SACGqH,WAKX,eAAC9H,EAAA,EAAD,WACE,cAACsC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACG0F,IAEH,cAAC3F,EAAA,EAAD,CAAKC,GAAI,EAAT,SACG8F,c,GA9OoBpI,IAAMC,WAySxBwI,E,kDAlDb,WAAYpM,GAAQ,IAAD,8BACjB,cAAMA,IACDqM,YAAcxK,OAAO0C,KAAKvE,EAAMgB,MACrC,EAAK+J,iBAAmB,KACxB,EAAKhJ,cAAgB,GACrB,EAAKZ,MAAQ,CACXoF,UAAU,GANK,E,uDAUnB,SAAoB+F,GAAS,IAAD,OAC1BpP,KAAKmP,YAAY5F,SAAQ,SAAAnI,GAAC,OAAI,EAAKyD,cAAczD,GAAKgO,EAAOf,OAAOjN,MACpEpB,KAAK6N,iBAAmBuB,EAAOxB,eAC/B5N,KAAKyE,SAAS,CAAC4E,SAAU+F,EAAO/F,a,+BAGlC,WACEvI,QAAQC,IAAIf,KAAK6E,eACjB,IAAM4I,EAAgB,CACpBI,iBAAkB7N,KAAK6N,kBAGzB7N,KAAK8C,MAAM0G,WAAW,CACpBiE,cAAeA,EACfE,cAAe3N,KAAK6E,kB,oBAIxB,WAAU,IAAD,OACP,OACE,eAAC4E,EAAA,EAAD,CAAOpD,UAAU,cAAcqD,KAAK,KAAKC,KAAM3J,KAAK8C,MAAM6G,KAAMC,OAAQ5J,KAAK8C,MAAM+G,YAAaC,YAAY,EAA5G,UACE,cAACL,EAAA,EAAMM,OAAP,UACE,cAACN,EAAA,EAAMnD,MAAP,2CAEF,cAACmD,EAAA,EAAMlD,KAAP,CAAYF,UAAU,YAAtB,SACE,cAAC,EAAD,CACEvC,KAAM9D,KAAK8C,MAAMgB,KACjB8D,QAAS5H,KAAK8C,MAAM8E,QACpB1E,SAAU,SAAAkM,GAAM,OAAI,EAAKC,oBAAoBD,QAGjD,eAAC3F,EAAA,EAAMQ,OAAP,WACE,cAACnD,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAShH,KAAK8C,MAAM+G,YAAhD,mBACA,cAACjD,EAAD,CAAYK,MAAM,sBAAsBJ,QAAS7G,KAAKiE,MAAMoF,SAAUrC,QAAS,kBAAM,EAAKsI,iC,GA5CxE7I,IAAMC,WC7clC,SAAS6I,EAAWzM,GAClB,IAAM0M,EAAa1M,EAAMmE,MAAMwI,MAAM,KACZ/M,KAAI,SAACgD,GAAD,OAAOA,EAAEgK,OAAO,GAAGf,cAAgBjJ,EAAEiK,UAAU,MACnDC,KAAK,KAC9B,OAAO9M,EAAM+M,QACX,KAAK,EACH,OACE,cAAC/I,EAAA,EAAD,CAA0BT,UAAU,aAAaqD,KAAK,KAAK1C,QAAS,kBAAMlE,EAAMkE,WAAhF,SACGwI,GADU1M,EAAMmE,OAIvB,KAAK,EACH,OACE,cAACH,EAAA,EAAD,CAA0BT,UAAU,aAAaqD,KAAK,KAAK3C,QAAQ,UAAUC,QAAS,kBAAMlE,EAAMkE,WAAlG,SACGwI,GADU1M,EAAMmE,OAIvB,QACE,OACE,cAACH,EAAA,EAAD,CAA0BT,UAAU,aAAaqD,KAAK,KAAKxC,UAAQ,EAAnE,SACGsI,GADU1M,EAAMmE,Q,IAOrB6I,E,kDACJ,WAAYhN,GAAQ,IAAD,8BACjB,cAAMA,IACDiN,OAASjN,EAAMiN,OACpB,EAAKC,gBAAkB,uBACvB,EAAK5N,KAAO,EAAKU,MAAMV,KAAO,EAAKU,MAAMV,KAAO,GAChD,EAAK6B,MAAQ,CACXgM,KAAMnN,EAAMoN,YACZ7G,WAAW,EAAKjH,MAPD,E,8CAWnB,WACEpC,KAAKyE,SAAS,CACZwL,MAAOjQ,KAAKiE,MAAMgM,KAClB5G,SAAUrJ,KAAKiE,MAAMoF,a,0BAIzB,SAAa8G,GACXnQ,KAAKoC,KAAO+N,EAAMvE,OAAO3E,MACzBjH,KAAKyE,SAAS,CACZwL,KAAMjQ,KAAKiE,MAAMgM,KACjB5G,WAAUrJ,KAAKoC,S,sBAInB,WACEpC,KAAK+P,OAAO/P,KAAKoC,MACjBpC,KAAKyE,SAAS,CACZwL,MAAM,EACN5G,WAAUrJ,KAAKoC,S,oBAInB,WAAU,IAAD,OACP,GAAIpC,KAAKiE,MAAMgM,KACb,OACE,cAAC1E,EAAA,EAAD,CAAMlF,UAAU,gBAAhB,SACE,eAACG,EAAA,EAAD,WACE,cAACsC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAACwC,EAAA,EAAKC,QAAN,CAAc4E,YAAapQ,KAAKgQ,gBAAiBtE,SAAU,SAAAC,GAAC,OAAI,EAAK0E,aAAa1E,IAAI1E,MAAOjH,KAAKoC,SAC9G,cAAC0G,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,cAACnC,EAAD,CAAYK,MAAM,YAAYD,QAAS,kBAAM,EAAKsJ,YAAYzJ,QAAS7G,KAAKiE,MAAMoF,SAAUK,KAAK,cAKnH,IAAIlG,EAAgBxD,KAAKoC,KAAQpC,KAAKoC,KAAOpC,KAAKgQ,gBAClD,OACE,cAACzE,EAAA,EAAD,CAAMlF,UAAU,gBAAhB,SACE,cAACkF,EAAA,EAAKC,QAAN,CAAc+E,WAAS,EAACC,UAAQ,EAACC,aAAcjN,EAAckG,KAAK,KAAK1C,QAAS,kBAAM,EAAK0J,sB,GAjDhEjK,IAAMC,WAyD3C,SAASiK,EAAiB7N,GACxB,IAAM8N,EAAmBC,KAAKC,UAAUhO,EAAMiO,UAAW,KAAM,GAC/D,OACE,qBAAK3E,MAAO,CAAC,OAAU,SAAvB,SACE,qBAAKA,MAAO,CAAC,UAAa,QAA1B,SACGwE,M,IAoaMI,E,kDA7Zb,WAAYlO,GAAQ,IAAD,8BACjB,cAAMA,IAGDgB,KAAO,EAAKhB,MAAMgB,KAEvB,EAAKmN,MAAQ,CACX,CAAC7O,KAAM,SAAUyN,OAAQ,GACzB,CAACzN,KAAM,YAAayN,OAAQ,GAC5B,CAACzN,KAAM,SAAUyN,OAAQ,GACzB,CAACzN,KAAM,QAASyN,OAAQ,GACxB,CAACzN,KAAM,WAAYyN,OAAQ,GAC3B,CAACzN,KAAM,WAAYyN,OAAQ,GAC3B,CAACzN,KAAM,aAAcyN,OAAQ,IAE/B,EAAKkB,UAAY,EAAKG,mBACtB,EAAKH,UAAU3O,KAAO,KACtB,EAAK2O,UAAUI,IAAM,KACrB,EAAKJ,UAAU9I,SAAW,GAG1B,EAAKhE,MAAQ,CACXiM,aAAa,EACbkB,SAAU,MAvBK,E,oDA2BnB,WACE,IAAMC,EAAOR,KAAK7K,MAAM6K,KAAKC,UAAU9Q,KAAK8D,KAAKwN,sBAMjD,OAFAD,EAAKE,MAAQ,EAENF,I,sBAGT,SAASG,GACPxR,KAAKyE,UAAS,SAAAR,GAEZ,OADAA,EAAMmN,SAAWI,EACVvN,O,uBAIX,WACEjE,KAAKyE,UAAS,SAAAR,GAEZ,OADAA,EAAMmN,SAAW,KACVnN,O,sBAIX,SAASwN,EAAQD,GAAW,IAAD,OAEzBxR,KAAK+Q,UAAU9I,SAAWjI,KAAK+Q,UAAU9I,SAASnD,QAAO,SAAAoD,GAAC,OAAIA,EAAEwJ,OAASF,KAGzE,IAAIG,GAAa,EACjB3R,KAAKiR,MAAM1H,SAAQ,SAAAmI,GACbA,EAAKtP,OAASoP,GAChBE,EAAK7B,OAAS,EACd8B,GAAa,GACJA,IACW,IAAhBD,EAAK7B,SACP6B,EAAK7B,OAAS,GAEhB8B,GAAa,MAIjB,IAAMC,EAAc,GACpB9Q,QAAQC,IAAI0Q,GACZ9M,OAAOC,QAAQ6M,GAAQlI,SAAS,YAAkB,IAAD,mBAAftE,EAAe,KAAXgC,EAAW,KAC/C,OAAQhC,GACN,IAAK,WACHgC,EAAMsC,SAAQ,SAAArB,GACZA,EAAEwJ,KAAOF,EACTI,EAAYrR,KAAK2H,MAEnB,MACF,IAAK,gBACHpH,QAAQC,IAAIkG,GACZ,EAAK8J,UAAUpD,cAAgB,GAC/BhJ,OAAOC,QAAQqC,GAAOsC,SAAQ,YAAsB,IAAD,mBAAnB/D,EAAmB,KAAX4I,EAAW,KACjD,EAAK2C,UAAUpD,cAAcnI,GAAW4I,KAE1C,MACF,QACE,EAAK2C,UAAU9L,GAAOgC,MAI5B2K,EAAYrI,SAAQ,SAAArB,GAAC,OAAI,EAAK6I,UAAU9I,SAAS1H,KAAK2H,MAEtDlI,KAAK6R,iBACL7R,KAAK8R,c,+BAGP,SAAkB1P,GAChBpC,KAAK+Q,UAAU3O,KAAOA,EACtBpC,KAAKyE,UAAS,SAAAR,GAEZ,OADAA,EAAMiM,aAAc,EACbjM,O,4BAMX,WAAkB,IAAD,OAGT8N,EAAQ/R,KAAKkR,mBASnB,SAASc,EAAoBC,EAAiBC,GAC5CA,EAAc3I,SAAQ,SAAA4I,GACfJ,EAAME,GAAiBjN,SAASmN,IACnCJ,EAAME,GAAiB1R,KAAK4R,MA+HlC,GAxIAnS,KAAKiR,MAAM1H,SAAQ,SAAAmI,GACjBK,EAAML,EAAKtP,KAAO,QAAU,EAAK2O,UAAUW,EAAKtP,KAAO,WAerDpC,KAAK+Q,UAAUpD,gBACjB7M,QAAQC,IAAIf,KAAK+Q,UAAUpD,eAC3BoE,EAAMpE,cAAgB,GACtBoE,EAAMlN,cAAgB,GACtBF,OAAOC,QAAQ5E,KAAK+Q,UAAUpD,eAAepE,SAAQ,YAAuB,IAAD,mBAApB/D,EAAoB,KAAX4I,EAAW,KACzE2D,EAAMpE,cAAcnI,GAAW4I,EAC/B2D,EAAMlN,cAAcW,GAAW4I,MAKnC2D,EAAM9J,SAAWjI,KAAK+Q,UAAU9I,SAChC8J,EAAM9J,SAASsB,SAAQ,SAAAtH,GAErBA,EAAQ+B,MAAMuF,SAAQ,SAAAnF,GACpB,OAAQA,GACN,IAAK,MACH2N,EAAMK,UAAYnQ,EAAQkP,IAC1B,MACF,IAAK,aACHY,EAAMM,WAAapQ,EAAQqQ,MAC3B,MACF,IAAK,cACHP,EAAMQ,YAActQ,EAAQqQ,MAC5B,MACF,IAAK,MACCP,EAAMlN,gBACR/D,QAAQC,IAAIgR,EAAMlN,eAClB5C,EAAQsL,uBAAuBhE,SAAQ,SAAAiE,GACrCuE,EAAMlN,cAAc2I,EAAIhI,UAAYgI,EAAItI,aAG5C,MACF,IAAK,oBACH8M,EAAoB,sBAAuB/P,EAAQuQ,qBACnD,MACF,IAAK,mBACHR,EAAoB,qBAAsB/P,EAAQwQ,oBAClD,MACF,IAAK,qBACHT,EAAoB,uBAAwB/P,EAAQyQ,sBACpD,MACF,IAAK,oBACHV,EAAoB,sBAAuB/P,EAAQ0Q,qBACnD,MACF,IAAK,uBACHX,EAAoB,YAAa/P,EAAQkD,WACzC,MACF,IAAK,aACwB4M,EAAMa,OAAO9N,QAAO,SAAA+N,GAAK,MAAmB,eAAfA,EAAMzO,QACvCrC,OAAS,EAC9BgQ,EAAMa,OAASb,EAAMa,OAAOlQ,KAAI,SAAAmQ,GAC9B,MAAmB,eAAfA,EAAMzO,MAAyByO,EAAMC,MAAQ7Q,EAAQ8Q,iBAChDF,EAEA,CAACzO,KAAM,aAAc0O,MAAO7Q,EAAQ8Q,qBAI/ChB,EAAMa,OAAOrS,KAAK,CAAC,KAAQ,aAAc,MAAS0B,EAAQ8Q,mBAE5D,MACF,IAAK,kBACHhB,EAAMiB,iBAAiB/Q,EAAQgR,aAAehR,EAAQiR,gBACtD,MACF,IAAK,gBACHnB,EAAMoB,cAAgBlR,EAAQmR,gBAC9B,MACF,IAAK,oBACHpB,EAAoB,qBAAsB/P,EAAQoR,cAClD,MACF,IAAK,eACHtB,EAAMuB,cAAc/S,KAAK,CAAC6B,KAAMH,EAAQG,KAAM6D,YAAahE,EAAQgE,cACnE,MACF,IAAK,YACHtB,OAAOC,QAAQ3C,EAAQsR,WAAWhK,SAAQ,YAAmB,IAAD,mBAAhBnF,EAAgB,KAAX6C,EAAW,KAC1D8K,EAAMyB,cAAcpP,GAAQzC,KAAKmK,IAAIiG,EAAMyB,cAAcpP,GAAO6C,MAElE,MACF,QACEnG,QAAQC,IAAI,mBAAqBqD,OAMnCnC,EAAQM,eAAe,YACzBN,EAAQQ,QAAQ8G,SAAQ,SAAA5G,GACtB,OAAOA,EAAOyB,MACZ,IAAK,MACC2N,EAAMlN,eACRlC,EAAOC,SAAS2G,SAAQ,SAAAnI,GACtB2Q,EAAMlN,cAAczD,IAAMuB,EAAOuC,YAGrC,MACF,IAAK,oBACH8M,EAAoB,sBAAuBrP,EAAOC,SAASF,KAAI,SAAAgD,GAAC,OAAIA,EAAET,QACtE,MACF,IAAK,mBACH+M,EAAoB,qBAAsBrP,EAAOC,SAASF,KAAI,SAAAgD,GAAC,OAAIA,EAAET,QACrE,MACF,IAAK,qBACH+M,EAAoB,uBAAwBrP,EAAOC,SAASF,KAAI,SAAAgD,GAAC,OAAIA,EAAET,QACvE,MACF,IAAK,oBACH+M,EAAoB,sBAAuBrP,EAAOC,SAASF,KAAI,SAAAgD,GAAC,OAAIA,EAAET,QACtE,MACF,IAAK,uBACH+M,EAAoB,YAAarP,EAAOC,SAASF,KAAI,SAAAgD,GAAC,OAAIA,EAAET,QAC5D,MACF,QACEnE,QAAQC,IAAI,mBAAqB4B,EAAOyB,aAQ7C2N,EAAMlN,cAAX,CAcA,GATEkN,EAAM0B,YAAc,GACpB9O,OAAOC,QAAQmN,EAAMlN,eAAe0E,SAAQ,YAAsB,IAAD,mBAAnB/D,EAAmB,KAAX4I,EAAW,KAC/D2D,EAAM0B,YAAYjO,GAAW7D,KAAKC,OAAOwM,EAAQ,IAAM,MAK3D2D,EAAM2B,MAAQ1T,KAAK+Q,UAAU2C,MAC7B3B,EAAM4B,OAAS3T,KAAK+Q,UAAU4C,OAC1B5B,EAAM2B,MAAO,CACf,IAAME,EAAa5T,KAAK8D,KAAK4P,MAAM3B,EAAM2B,OACzC,OAAQE,EAAWC,UACjB,IAAK,QACH9B,EAAM+B,GAAKF,EAAWG,QAAUhC,EAAM0B,YAAYO,UAClD,MACF,IAAK,SACHjC,EAAM+B,GAAKF,EAAWG,QAAUpS,KAAKmK,IAAI,EAAGiG,EAAM0B,YAAYO,WAC9D,MACF,IAAK,QACHjC,EAAM+B,GAAKF,EAAWG,QACtB,MACF,QACEhC,EAAM+B,GAAK/B,EAAMoB,cAAgBpB,EAAM0B,YAAYO,gBAIvDjC,EAAM+B,GAAK/B,EAAMoB,cAAgBpB,EAAM0B,YAAYO,UAGrD,GAAIjC,EAAM4B,OAAQ,CAChB,IAAMM,EAAcjU,KAAK8D,KAAK4P,MAAM3B,EAAM4B,QAC1C5B,EAAM+B,IAAMG,EAAYF,QAM1B,GADAhC,EAAMR,MAAQvR,KAAK+Q,UAAUQ,MACxBQ,EAAMR,MAAX,CAIA,IAAM2C,EAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGvS,KAAKmK,IAAIiG,EAAMR,MAAQ,EAAG,IAGpEQ,EAAMoC,UAAY,GAClBxP,OAAOC,QAAQ5E,KAAK8D,KAAKuB,QAAQkE,SAAQ,YAAmB,IAAD,mBAAhB6K,EAAgB,KACnDC,GADmD,KACvCtC,EAAMuC,yBAAyBtP,SAASoP,GAASzS,KAAK4S,MAAML,EAAc,GAAK,GAC3FM,EAAYzC,EAAMS,oBAAoBxN,SAASoP,GAASF,EAAc,EACtEO,EAAiB1C,EAAM2C,gBAAgB1P,SAASoP,GAAU,EAAIF,EAAe,EAEnFnC,EAAMoC,UAAUC,GAASzS,KAAKmK,IAAIuI,EAAWG,EAAWC,MAI1D1C,EAAM4C,QAAU3U,KAAK+Q,UAAU4D,QAC/B5C,EAAM6C,QAAU7C,EAAM4C,QAAQjS,KAAI,SAAAmS,GAChC,IAAMC,EAASjE,KAAK7K,MAAM6K,KAAKC,UAAU,EAAKhN,KAAK6Q,QAAQE,EAAEzQ,QAGzD2N,EAAMiB,iBAAiB6B,EAAEzQ,OAC3BO,OAAOC,QAAQmN,EAAMiB,iBAAiB6B,EAAEzQ,OAAOmF,SAAQ,YAAsB,IAAD,mBAAnBwL,EAAmB,KAAdC,EAAc,KAC1ElU,QAAQC,IAAIgU,GACZjU,QAAQC,IAAIiU,GACZF,EAAOC,GAAQC,EACflU,QAAQC,IAAI+T,MAIhB,IAAIG,EAAalD,EAAM0B,YAAYO,UAC/B,CAAC,QAAQ,UAAU,iBAAiBhP,SAAS8P,EAAOjB,YACtDoB,EAAaH,EAAOI,WAAWlQ,SAAS,WAAarD,KAAKmK,IAAIiG,EAAM0B,YAAY0B,SAAUpD,EAAM0B,YAAYO,WAAajC,EAAM0B,YAAY0B,UAG7I,IAKMC,EAAcH,GALGlD,EAAMW,qBAAqB2C,MAAK,SAAAlD,GACrD,OAAQA,EAAE0B,WAAaiB,EAAOjB,UAAc1B,EAAE/N,OAASyQ,EAAEzQ,QACtD8P,EAAc,GAIboB,EAAaR,EAAOS,YAAc,IAAMN,EAE9C,MAAO,CACL7Q,KAAMyQ,EAAEzQ,KACRhC,KAAM0S,EAAO1S,KACbgT,YAAaA,EACbE,WAAYA,EACZE,WAAYV,EAAOW,YACnB3C,MAAOgC,EAAOhC,UAWlB9S,KAAK+Q,UAAYgB,OA5Df/R,KAAK+Q,UAAYgB,OAzCjB/R,KAAK+Q,UAAYgB,I,oBAwGrB,WAAU,IAAD,OACD2D,EAAoB1V,KAAKiR,MAAMvO,KAAI,SAACgP,GACtC,OAAO,cAAClL,EAAA,EAAD,UACL,cAAC+I,EAAD,CACEtI,MAAOyK,EAAKtP,KACZyN,OAAQ6B,EAAK7B,OACb7I,QAAS,kBAAM,EAAKoK,SAASM,EAAKtP,UAJrBsP,EAAKtP,SAS1B,OACE,8BACE,eAAC8G,EAAA,EAAD,WACE,eAAC1C,EAAA,EAAD,WACE,cAACsC,EAAA,EAAD,CAAKE,GAAI,EAAT,SACG0M,IAGH,eAAC5M,EAAA,EAAD,CAAKE,GAAI,GAAT,UACE,cAACxC,EAAA,EAAD,UAAK,cAAC,EAAD,CACHpE,KAAMpC,KAAK+Q,UAAU3O,KACrB8N,YAAalQ,KAAKiE,MAAMiM,YACxBH,OAAQ,SAAA3N,GAAI,OAAI,EAAKuT,kBAAkBvT,QAEzC,cAACoE,EAAA,EAAD,UAAK,cAACmK,EAAD,CAAkBI,UAAW/Q,KAAK+Q,oBAI3C,cAAC,EAAD,CACEpH,KAA8B,WAAxB3J,KAAKiE,MAAMmN,SACjBxJ,QAAS5H,KAAK+Q,UACdjN,KAAM9D,KAAK8D,KAAK8R,QAChBnO,YACE,CACE5C,cAAe7E,KAAK8D,KAAKe,cACzBc,MAAO3F,KAAK8D,KAAK6B,MACjBN,OAAQrF,KAAK8D,KAAKuB,OAClBF,UAAWnF,KAAK8D,KAAKqB,WAGzB0E,YAAa,kBAAM,EAAKiI,aACxBtI,WAAY,SAAAiI,GAAM,OAAI,EAAKoE,SAASpE,EAAQ,aAG9C,cAAC,EAAD,CACE9H,KAA8B,cAAxB3J,KAAKiE,MAAMmN,SACjBxJ,QAAS5H,KAAK+Q,UACdjN,KAAM9D,KAAK8D,KAAKe,cAChBgF,YAAa,kBAAM,EAAKiI,aACxBtI,WAAY,SAAAiI,GAAM,OAAI,EAAKoE,SAASpE,EAAQ,yB,GAtZlChL,IAAMC,WClCboP,E,kDA9Db,WAAYhT,GAAQ,IAAD,8BACjB,cAAMA,IAMRiT,aAAe,SAACC,GAAD,OAASA,EAAI7V,QACxB,gBACA,SAAC8V,GAAD,OAAWA,EAAMtH,cACAxO,QAAQ,IAAK,IACbA,QAAQ,IAAK,QAThC,EAAK8D,MAAQ,CACXiS,QAAQ,GAHO,E,6CAenB,WAAa,IAAD,OACV,IAAIlW,KAAKiE,MAAMiS,OAAf,CAGAlW,KAAK8D,KAAO,GAeZqS,QAAQC,IAda,CACnB,iBACA,OACA,QACA,OACA,YACA,UACA,SACA,QACA,QACA,UACA,yBAGuB1T,KAAI,SAAAN,GAE3B,OAAOiU,MADK,UAAYjU,EAAO,QACb,CAACkU,QAAU,CAAE,eAAgB,mBAAoB,OAAU,sBAC1EC,MAAK,SAAAC,GAAI,OACRA,EAAKC,OAAOF,MAAK,SAAAzS,GACf,IAAM3B,EAAK,EAAK4T,aAAa3T,GAE7B,OADA,EAAK0B,KAAK3B,GAAM2B,GACT,YAGXyS,MAAK,SAAAG,GACP,EAAKjS,SAAS,CAACyR,QAAQ,U,oBAI3B,WAEE,OADAlW,KAAK2W,YACA3W,KAAKiE,MAAMiS,OAKZ,cAAC,EAAD,CAASpS,KAAM9D,KAAK8D,OAHf,8C,GAvDK2C,IAAMC,WCSTkQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ae501e2.chunk.js","sourcesContent":["import React from 'react'\nimport parse from 'html-react-parser'\n\nimport { Row, Button, Card } from 'react-bootstrap'\nimport { Multiselect } from \"multiselect-react-dropdown\";\n\nclass DiceRoller {\n  \n  constructor(inputRoll) {\n    // On construction, take the roll string and parse it into usable roll objects\n    this.diceRolls = []\n\n    // Not a perfect way to do this, but it's more of a fun exercise with regexes than anything practical.\n    const roll = inputRoll.replace(/\\s+/g, '')\n\n    if (!(/(\\d*)d(\\d+)((([+-])(((\\d*)d(\\d+))|(\\d+)))*|(kh|kl|dh|dl)(\\d+))/.test(roll))) {\n      console.log('invalid expression: ' + roll);\n      return;\n    }\n\n    var match = /(\\d*)d(\\d+)(kh|kl|dh|dl)(\\d+)/.exec(roll) // special case: XdYkhZ for dropping lowest\n\n    if (match) {\n      this.diceRolls.push({\n        numDice: parseInt(match[1]),\n        diceSize: parseInt(match[2]),\n        action: match[3],\n        static: parseInt(match[4])\n      })\n    } else {\n      const diceRegexp = /([+-])?(((\\d*)d(\\d+))|(\\d+))/g\n      while ((match = diceRegexp.exec(roll))) {\n        if (match[3]) { // die roll\n          this.diceRolls.push({\n            numDice: match[4] ? parseInt(match[4]) : 1,\n            diceSize: parseInt(match[5]),\n            action: match[1] ? match[1] : '+',\n            static: 0\n          });\n        } else if (match[6]) { // static mod\n          this.diceRolls.push({\n            numDice: 0,\n            diceSize: 0,\n            action: match[1] ? match[1] : '+',\n            static: parseInt(match[6])\n          });\n        }\n      }\n    }\n  }\n\n  keepNRolls(rolls, n, highest) {\n    rolls.sort((a,b) => {\n      if (highest) return (b-a);\n      else return (a-b);\n    })\n    return rolls.slice(0,n);\n  }\n\n  roll() {\n    return this.diceRolls.reduce((total,roll) => {\n      // roll the dice\n      const rollResults = []\n      for (var i=0; i < roll.numDice; i++) {\n        rollResults.push(Math.floor(Math.random() * roll.diceSize) + 1)\n      }\n\n      switch (roll.action) {\n        case \"+\":\n          return (total + rollResults.reduce((a,b) => a + b, 0) + roll.static);\n        case \"-\":\n          return total - (rollResults.reduce((a,b) => a + b, 0) + roll.static);\n        case \"dl\": // drop lowest N (keep highest length-N)\n          return total + this.keepNRolls(rollResults, rollResults.length-roll.static, true).reduce((a,b) => a + b, 0);\n        case \"kh\": // keep highest N\n          return total + this.keepNRolls(rollResults, roll.static, true).reduce((a,b) => a + b);\n        case \"dh\": // drop highest N (keep lowest length-N)\n          return total + this.keepNRolls(rollResults, rollResults.length-roll.static, false).reduce((a,b) => a + b, 0);\n        case \"kl\": // keep lowest N\n          return total + this.keepNRolls(rollResults, roll.static, false).reduce((a,b) => a + b)\n        default:\n          console.log(\"unknown action: \" + roll.action)\n          return total;\n      }\n    }, 0)\n  }\n}\n\nfunction initializeFeature(feature, source) {\n  // Generate an id for the feature based on its name and source\n  feature.id = source + '_' + feature.name.toLowerCase().replaceAll(' ', '_')\n  if (feature.hasOwnProperty('choices')) {\n    feature.complete = false\n    feature.choices = feature.choices.map(choice => {\n      choice.selected = [];\n      return choice;\n    });\n  } else {\n    feature.complete = true\n  }\n  return feature\n}\n\nfunction FeatureCardSelections(props) {\n  return (\n    <div>\n      <h6 key='title'>{props.title}</h6>\n      <Multiselect \n        key={props.id}\n        options={props.choices}\n        onSelect={props.onUpdate}\n        onRemove={props.onUpdate}\n        selectionLimit={props.limit}\n        selectedValues={props.preselected}\n        displayValue=\"displayName\"\n        showCheckbox={true}\n        avoidHighlightFirstOption={true}\n        hidePlaceholder={true}\n        closeOnSelecte={false}\n      />\n    </div>\n  )\n}\n\nclass FeatureCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = this.props.data;\n    this.feature = this.props.feature\n    this.onUpdate = this.props.onUpdate\n    this.featureTypes = this.feature.types\n    this.state = {\n      complete: this.complete\n    }\n  }\n\n  updateFeatureState() {\n    if (!this.feature.hasOwnProperty('choices')) return;\n\n    if (this.feature.choices.every(c => {\n      switch (c.type) {\n        case \"asi\":\n          return c.num_abilities === c.selected.length;\n        case \"language_proficiency\":\n          return c.num_languages === c.selected.length;\n        case \"skill_proficiency\":\n          return c.num_skills === c.selected.length;\n        case \"tool_proficiency\":\n          return c.num_tools === c.selected.length;\n        default:\n          return true;\n      }\n    })) {\n      this.feature.complete = true;\n    } else {\n      this.feature.complete = false;\n    }\n    this.setState(state => {\n      state.complete = this.feature.complete;\n      return state;\n    })\n\n    this.props.onUpdate(this.feature)\n  }\n\n  renderChoices() {\n    if (!this.feature.hasOwnProperty('choices')) {\n      return <div />\n    }\n\n    if (this.feature.choices.length === 0) {\n      return <div />\n    }\n\n    return (\n      this.feature.choices.map(choice => {\n        var display = 'Select ';\n        var choices = [];\n        var preselected = choice.selected;\n        var limit = null;\n\n        switch (choice.type) {\n          case \"asi\":\n            choices = Object.entries(this.data.abilityScores).map( ([k,v]) => {\n              return {\"key\": k, \"displayName\": v.name};\n            }).filter(a => !choice.excludes.includes(a.key));\n            limit = choice.num_abilities;\n            if (limit === 1) {\n              display += 'an ability score to increase by ' + choice.increase;\n            } else {\n              display += choice.num_abilities + ' ability scores to increase by ' + choice.increase;\n            }\n            break;\n          case \"language_proficiency\":\n            choices = Object.entries(this.data.languages).map(([k,v]) => {\n              return { \"key\": k, \"displayName\": v.name };\n            }).filter(l => !choice.excludes.includes(l.key));\n            limit = choice.num_languages;\n            if (limit === 1) {\n              display += 'a language';\n            } else {\n              display += choice.num_languages + ' languages';\n            }\n            break;\n          case \"skill_proficiency\":\n            choices = Object.entries(this.data.skills).map(([k,v]) => {\n              const displayName = v.name + ' (' + this.data.abilityScores[v.ability].shortName + ')';\n              return {\"key\": k, \"displayName\": displayName}\n            }).filter(s => !choice.excludes.includes(s.key));\n            limit = choice.num_skills;\n            if (limit === 1) {\n              display += 'a skill';\n            } else {\n              display += choice.num_skills + ' skills';\n            }\n            break;\n          case \"tool_proficiency\":\n            choices = Object.entries(this.data.tools).map(([k,v]) => {\n              return {\"key\": k, \"displayName\": v.name}\n            }).filter(t => !choice.excludes.includes(t.key));\n            limit = choice.num_tools;\n            if (limit === 1) {\n              display += 'a tool';\n            } else {\n              display += choice.num_tools + ' tools';\n            }\n            break;\n          default:\n            return <div />\n        }\n        return (\n          <FeatureCardSelections\n            id={this.feature.id}\n            title={display}\n            choices={choices}\n            preselected={preselected}\n            limit={limit}\n            onUpdate={(selections) => {\n              choice.selected = selections;\n              this.updateFeatureState();\n            }}\n          />\n        )\n      })\n    );\n  }\n\n\n  render() {\n    const descriptionComponent = parse(this.feature.description);\n    const choices = this.renderChoices()\n    const border = this.feature.complete ? 'primary' : 'secondary'\n\n    return (\n      <div key={this.feature.id}>\n        <Card border={border} className=\"feature-card\">\n          <Card.Title>{this.feature.name}</Card.Title>\n          <Card.Body>\n            <Row key='description'>{descriptionComponent}</Row>\n            <Row key='choices'>{choices}</Row>\n          </Card.Body>\n        </Card>\n      </div>\n    )\n  }\n}\n\nfunction FeatureList(props) {\n  return props.features.map(\n    feature => {\n      return (\n        <Row>\n          <FeatureCard\n            feature={feature}\n            data={props.data}\n            onUpdate={props.onUpdate}\n          />\n        </Row>\n      )\n    }\n  )\n}\n\nfunction Description(props) {\n  if (props.name === null) {\n    return <div />;\n  }\n  const descriptionComponent = parse(props.description);\n  return (\n    <div className=\"description\">\n      <h2>{props.name}</h2>\n      {descriptionComponent}\n    </div>\n  )\n}\n\nfunction SaveButton(props) {\n  \n  if (props.enabled) {\n    return <Button className=\"saveButton\" variant=\"primary\" onClick={props.onClick}>\n            {props.value}\n          </Button>\n  } else {\n    return <Button className=\"saveButton\" variant=\"primary\" disabled>{props.value}</Button>\n  }\n}\n\nfunction OptionSelector(props) {\n  const variant = props.selected ? \"primary\" : \"outline-primary\"\n  return <Button className=\"selector\" variant={variant} onClick={props.onClick}>{props.value}</Button>\n}\n\nfunction OptionList(props) {\n  const options = Object.keys(props.options)\n  return options.map(\n    option => {\n      return (\n        <Row key={option}>\n          <OptionSelector\n            value={props.options[option].name}\n            selected={option === props.selected}\n            onClick={() => props.onClick(option)}\n          />\n        </Row>\n      )\n    }\n  )\n}\n\nexport { FeatureList, FeatureCard, Description, SaveButton, OptionList, initializeFeature, DiceRoller }","import React from 'react'\nimport { Modal, Button, Container, Row, Col } from 'react-bootstrap'\n\nimport { SaveButton, OptionList, Description, FeatureCard, initializeFeature } from './common'\n\n\nclass OriginEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.originData = props.data;\n    this.featureData = props.featureData;\n\n    var origin = null;\n    var suborigin = null;\n    if (props.current.originStep) {\n      origin = props.current.originStep.origin\n      suborigin = props.current.originStep.suborigin\n      this.availableSuborigins = this.originData[origin].suborigins\n      this.selectedOriginFeatures = props.current.features.filter(f => f.source === 'origin')\n      this.selectedSuboriginFeatures = props.current.features.filter(f => f.source === 'suborigin')\n    } else {\n      this.availableSuborigins = {};\n      this.selectedOriginFeatures = [];\n      this.selectedSuboriginFeatures = [];\n    }\n    this.state = {\n      selectedOrigin: origin,\n      selectedSuborigin: suborigin\n    }\n  }\n\n  selectOrigin(origin) {\n    var features = [];\n    if (origin !== null && this.originData.hasOwnProperty(origin)) {\n      features = this.originData[origin].features.map(f => initializeFeature(f, 'origin_' + origin))\n    }\n    this.selectedOriginFeatures = features;\n    this.selectedOriginFeatures.sort((f1, f2) => {\n      const c1 = f1.hasOwnProperty('choices') ? f1.choices.length : 0;\n      const c2 = f2.hasOwnProperty('choices') ? f2.choices.length : 0;\n      return c2 - c1;\n    })\n\n    if (this.originData[origin].hasOwnProperty('suborigins')) {\n      this.availableSuborigins = this.originData[origin].suborigins\n    } else {\n      this.availableSuborigins = {}\n    }\n\n    this.selectedSuboriginFeatures = []\n    this.setState({\n      selectedOrigin: origin,\n      selectSuborigin: null\n    }, this.onUpdate);\n  }\n\n  selectSuborigin(suborigin) {\n    var features = []\n    if (suborigin !== null && this.availableSuborigins.hasOwnProperty(suborigin)) {\n      features = this.availableSuborigins[suborigin].features.map(f => initializeFeature(f, 'suborigin_' + suborigin))\n    }\n\n    this.selectedSuboriginFeatures = features\n    this.selectedSuboriginFeatures.sort((f1, f2) => {\n      const c1 = f1.hasOwnProperty('choices') ? f1.choices.length : 0;\n      const c2 = f2.hasOwnProperty('choices') ? f2.choices.length : 0;\n      return c2 - c1;\n    })\n    this.setState({\n      selectedOrigin: this.state.selectedOrigin,\n      selectedSuborigin: suborigin\n    }, this.onUpdate);\n  }\n\n  onUpdate() {\n    this.props.onUpdate({\n      origin: this.state.selectedOrigin,\n      originFeatures: this.selectedOriginFeatures,\n      noSuborigins: Object.entries(this.availableSuborigins).length === 0,\n      suborigin: this.state.selectedSuborigin,\n      suboriginFeatures: this.selectedSuboriginFeatures\n    })\n  }\n\n  renderSelected() {\n    const selectedOrigin = this.state.selectedOrigin;\n    const selectedSuborigin = this.state.selectedSuborigin;\n    if (selectedOrigin === null || !(selectedOrigin in this.originData)) {\n      return <div/>\n    }\n    const originData = this.originData[selectedOrigin]\n    var suboriginData = {name: null, description: null}\n    if (selectedSuborigin !== null && selectedSuborigin in this.availableSuborigins) {\n      suboriginData = this.availableSuborigins[selectedSuborigin]\n    }\n\n    const originFeatures = this.selectedOriginFeatures.map(f => (\n        <Row key={f.id}>\n          <FeatureCard feature={f} data={this.featureData} onUpdate={() => this.onUpdate()} />\n        </Row>)\n    )\n    const suboriginFeatures = this.selectedSuboriginFeatures.map(f => (\n      <Row key={f.id}>\n        <FeatureCard feature={f} data={this.featureData} onUpdate={() => this.onUpdate()} />\n      </Row>)\n    )\n\n    return (\n      <div>\n        <Row>\n          <Col md={7}>\n            <Description name={originData.name} description={originData.description} />\n          </Col>\n          <Col lg={1} />\n          <Col lg={4}>\n            <Row>\n              <OptionList\n                options={this.availableSuborigins}\n                selected={this.state.selectedSuborigin} \n                onClick={suborigin => this.selectSuborigin(suborigin)}\n              />\n            </Row>\n            <Row>\n              <Description name={suboriginData.name} description={suboriginData.description} />\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6} >\n            {originFeatures}\n          </Col>\n          <Col md={6} >\n            {suboriginFeatures}\n          </Col>\n        </Row>\n      </div>\n    )\n\n  }\n\n  render() {\n    const selectedOrigin = this.renderSelected()\n    return (\n      <Container>\n        <Row>\n          <Col lg={2}>\n            <OptionList\n              options={this.originData}\n              selected={this.state.selectedOrigin}\n              onClick={origin => this.selectOrigin(origin)}\n            />\n          </Col>\n          <Col lg={10}>\n            {selectedOrigin}\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nclass OriginStep extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selected = null;\n    this.state = {\n      saveable: false\n    };\n  }\n\n  updateOrigin(value) {\n    // Check the selected origin and features.\n    // - Origin must be selected\n    // - All selected origin features must be complete\n    // - Suborigin must be selected (if suborigin exists)\n    // - All selected suborigin featrues must be complete (if suborigin exists)\\\n    var stepIsComplete = false\n    this.selected = value\n    if (this.selected.origin !== null &&\n        this.selected.originFeatures.every(f => f.complete) &&\n        (this.selected.noSuborigins ||\n          (this.selected.suborigin !== null &&\n           this.selected.suboriginFeatures.every(f => f.complete)))\n        )\n    {\n      stepIsComplete = true\n    }\n\n    this.setState({\n      saveable: stepIsComplete\n    });\n  }\n\n  saveOrigin() {\n    const origin = {\n      origin: this.selected.origin,\n      suborigin: this.selected.suborigin\n    }\n    const features = this.selected.originFeatures.map(f => {\n      f['source'] = 'origin';\n      return f;\n    })\n    if (!this.selected.noSuborigins) {\n      this.selected.suboriginFeatures.forEach(f => {\n        f['source'] = 'suborigin';\n        features.push(f)\n      })\n    }\n    this.props.handleSave({\n      originStep: origin,\n      features: features\n    })\n  }\n\n  render() {\n    return (\n      <Modal className=\"creatorStep\" size=\"lg\" show={this.props.show} onHide={this.props.handleClose} scrollable={true}>\n        <Modal.Header>\n          <Modal.Title>Select Origin</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"show-grid\">\n          <OriginEditor \n            data={this.props.data}\n            featureData={this.props.featureData}\n            current={this.props.current}\n            onUpdate={value => this.updateOrigin(value)}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleClose}>Close</Button>\n          <SaveButton value=\"Save Origin\" enabled={this.state.saveable} onClick={() => this.saveOrigin()} />\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nexport default OriginStep","import React from 'react'\nimport { Modal, Button, Container, Row, Col, Form, Card } from 'react-bootstrap'\nimport { SaveButton, DiceRoller } from './common'\n\nfunction DiceView(props) {\n  // Looks hacky, but this really works. CSS is custom.\n  // Somewhat copied from https://stackoverflow.com/questions/20456694/grid-of-responsive-squares\n  return (\n    <Row>\n      <Col className=\"justify-content-center\">\n        <div className=\"dice\">\n          <div className=\"dice-face\">\n            <div className=\"dice-face-table\">\n              <div className=\"dice-face-table-cell\">\n                {props.value}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nclass ArrayViewer extends React.Component {\n\n  rollDiceArray(arraySize) {\n    const diceArray = []\n\n    const roller = new DiceRoller(this.props.roll)\n\n    for (var i=0; i < arraySize; i++) {\n      diceArray.push(roller.roll())\n    }\n    diceArray.sort((a,b) => b-a);\n    this.props.onRoll(diceArray);\n    return;\n  }\n\n  renderDice() {\n    return this.props.array.map(a => {\n      return <DiceView value={a} />\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row h25 className=\"mb-4\">\n          {this.props.roll ? <div className=\"mb-1\"><Button onClick={() => this.rollDiceArray(6)}>{\"Roll \" + this.props.roll}</Button></div> :\n          <div className=\"mb-5\"/>}\n        </Row>\n        <Row>\n          <Col>{this.renderDice()}</Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nfunction PointBuyViewer(props) {\n  return (\n    <Row className=\"align-items-center h-100 point-buy-display\">\n      <Col>\n        <Row><p>Points Left:</p></Row>\n        <Row><p>{props.pointsLeft}</p></Row>\n      </Col>\n    </Row>\n  )\n}\n\nfunction ArraySelector(props) {\n  const available = props.array.map(a => a)\n  props.arrayUsed.forEach(used => {\n    available.splice(available.findIndex(a => a === used), 1);\n  })\n  if (props.selected && !available.includes(props.selected)) {\n    available.push(props.selected);\n    available.sort((a,b) => b - a);\n  }\n\n  const arrayOptions = available.map(a => <option value={a}>{a}</option>)\n  arrayOptions.push(<option value=\"\">--</option>)\n\n  return (\n    <Form>\n      <Form.Control as=\"select\" value={props.selected ? props.selected : \"\"} onChange={e => props.onChange(parseInt(e.target.value))}>\n        {arrayOptions}\n      </Form.Control>\n    </Form>\n  )\n}\n\n// Need to make this custom\nclass PointBuySelector extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    }\n  }\n\n  getMax() {\n    switch (this.props.data.pointsLeft) {\n      case 0:\n        return this.state.value;\n      case 1:\n        if (this.state.value > 13) return this.props.value;\n        else return this.state.value + 1;\n      default:\n        return 15\n    }\n  }\n\n  updateValue(value) {\n    const min = 8;\n    const max = this.getMax();\n\n    // Set the boundaries\n    if (value > max) value = max;\n    else if (value < min) value = min;\n\n    this.setState({\n      value: value\n    })\n    \n    // Trigger the update\n    this.props.onChange(value);\n  }\n\n  onChange(value) {\n    if (value === \"1\") { // Might be entering a 2 digit number (can't be more than 15). Allow this, but don't change the internal value.\n      return;\n    } else if (value === \"\") { // User deleted everything. Allow this, but update it on blur.\n      return;\n    }\n\n    this.updateValue(parseInt(value))\n  }\n\n  onBlur (value) {\n    if (value === \"\") { // User deleted everything. Reset to min.\n      this.updateValue(8)\n    } else {\n      this.updateValue(parseInt(value))\n    }\n  }\n\n\n  render() {\n    const min = 8;\n    const max = this.getMax();\n\n    return (\n      <Form>\n        <Form.Control\n          type=\"number\"\n          min={min}\n          max={max}\n          value={this.state.value}\n          onChange={e => this.onChange(e.target.value)}\n          size=\"lg\"\n        />\n      </Form>\n    )\n  }\n}\n\nfunction ScoreSelector(props) {\n  // Changes based on whether we are using point buy or array. \n  var selectorBody = <div style={{\"textAlign\": \"center\"}}>--</div>\n  if (props.data.isActive) {\n    var selector = {}\n    if (props.data.isArray) {\n      selector = (\n        <ArraySelector\n          array={props.data.array}\n          arrayUsed={props.data.arrayUsed}\n          selected={props.data.selected}\n          onChange={v => props.onSelect([props.type, v])}\n        />)\n    } else {\n      selector = <PointBuySelector value={props.data.selected} data={props.data} onChange={v => props.onSelect([props.type, v])} />\n    }\n\n    const bonus = props.data.bonus\n    var total = \"--\"\n    if (props.data.selected) {\n      const totalScore = props.data.selected + bonus\n      const totalMod = Math.floor((totalScore - 10) / 2)\n      if (totalMod < 0) {\n        total = totalScore + ' (-' + (-totalMod) + ')'\n      } else {\n        total = totalScore + ' (+' + totalMod + ')'\n      }\n    }\n\n    selectorBody = <Row>\n      <Col md={4}>{selector}</Col>\n      <Col md={1} textCenter>{bonus < 0 ? \"-\" : \"+\"}</Col>\n      <Col md={2} textCenter>{bonus}</Col>\n      <Col md={1} textCenter>=</Col>\n      <Col md={4} textCenter>{total}</Col>\n    </Row>\n  }\n\n  return (\n    <Card className=\"abilityScoreCard mb-2 mt-2\">\n      <Card.Body>\n        <Container>\n          <Row><Card.Title style={{\"textAlign\": \"center\"}}>{props.name}</Card.Title></Row>\n          <Row>\n            {selectorBody}\n          </Row>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n}\n\n\nclass AbilityScoreEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.abilityScoreData = props.data;\n    this.methods = {\n      carbonRoll: { displayName: \"Carbon 2185 Dice Roll (2d6+5)\", \"roll\": \"2d6+5\" },\n      carbonArray: { displayName: \"Carbon 2185 Standard Array (16,14,13,12,10,9)\", \"roll\": null },\n      dndRoll: { displayName: \"D&D 5E Dice Roll (4d6 drop lowest)\", \"roll\": \"4d6dl1\" },\n      dndPointBuy: { displayName: \"D&D 5E Point Buy (27 points)\", \"roll\": null },\n    };\n    this.rolling = false\n    this.arrayGenerated = false\n\n    // Calculate bonuses from ASIs\n    this.bonuses = {}\n    Object.keys(this.abilityScoreData).forEach(a => this.bonuses[a]=0)\n    props.current.features.filter(f => f.types.includes(\"asi\")).forEach(f => {\n      if (f.hasOwnProperty(\"ability_score_increase\")) {\n        f.ability_score_increase.forEach(asi => this.bonuses[asi.ability] += asi.increase)\n      }\n      if (f.hasOwnProperty(\"choices\")) {\n        f.choices.filter(c => c.type === \"asi\").forEach(choice => {\n          choice.selected.forEach(s => {\n            this.bonuses[s.key] += choice.increase\n          })\n        })\n      }\n    })\n\n    if (props.current.abilitiesStep) {\n      this.selectedScores = props.current.baseAbilities\n      const selectedMethod = props.current.abilitiesStep.generationMethod\n      if (selectedMethod === \"dndPointBuy\") {\n        this.state = {\n          selectedMethod: selectedMethod,\n          array: [],\n          arrayUsed: [],\n          pointsLeft: 27 - this.calculatePointTotal()\n        }\n      } else {\n        this.rolling = (selectedMethod === \"carbonRoll\" || selectedMethod === \"dndRoll\")\n        this.arrayGenerated = true\n        const array = Object.values(this.selectedScores)\n        array.sort((a,b) => b-a)\n        this.state = {\n          selectedMethod: selectedMethod,\n          array: array,\n          arrayUsed: array,\n          pointsLeft: 27\n        }\n      }\n    } else {\n      this.selectedScores = {}\n      Object.keys(this.abilityScoreData).forEach(d => this.selectedScores[d] = null)\n\n      this.state = {\n        selectedMethod: null,\n        array: [],\n        arrayUsed: [],\n        pointsLeft: 27\n      };\n    }\n  }\n\n  changeMethod(method) {\n    var array = [];\n    \n    // Switching method always resets the selected scores\n    Object.keys(this.abilityScoreData).forEach(d => this.selectedScores[d] = null);\n    switch(method) {\n      case \"carbonRoll\":\n      case \"dndRoll\":\n        this.rolling = true;\n        this.arrayGenerated = false;\n        array = [];\n        break;\n      case \"carbonArray\":\n        this.rolling = false;\n        this.arrayGenerated = true;\n        array = [16,14,13,12,10,9];\n        break;\n      case \"dndPointBuy\":\n        this.rolling = false;\n        this.arrayGenerated = false;\n        array = [];\n        Object.keys(this.abilityScoreData).forEach(d => this.selectedScores[d] = 8);\n        break;\n      default:\n        return;\n    }\n\n    this.setState({\n      selectedMethod: method,\n      array: array,\n      arrayUsed: [],\n      pointsLeft: 27\n    })\n    this.updateSaveable()\n  }\n\n  calculatePointTotal() {\n    const pointCosts = [0,1,2,3,4,5,7,9]\n    return Object.values(this.selectedScores).reduce((total, score) => {\n      if (score < 8) return total;\n      if (score > 15) return total + (2*(score-15)+9);\n      return total + pointCosts[score-8];\n    }, 0)\n  }\n\n  updateScore(ability, value) {\n    var arrayUsed = this.state.arrayUsed.map(a => a)\n    var pointsLeft = this.state.pointsLeft\n    switch(this.state.selectedMethod) {\n      case \"dndPointBuy\":\n        this.selectedScores[ability] = value;\n        pointsLeft = 27 - this.calculatePointTotal()\n        break;\n      case \"dndRoll\":\n      case \"carbonRoll\":\n      case \"carbonArray\":\n        this.selectedScores[ability] = value;\n        arrayUsed = Object.values(this.selectedScores).filter(a => a);\n        break;\n      default:\n        return;\n    }\n\n    this.setState({\n      selectedMethod: this.state.selectedMethod,\n      array: this.state.array,\n      arrayUsed: arrayUsed,\n      pointsLeft: pointsLeft\n    })\n\n    this.updateSaveable()\n  }\n\n  updateArray(rolls) {\n    // Array is updated. Reset selected scores\n    Object.keys(this.abilityScoreData).forEach(d => this.selectedScores[d] = null);\n    this.arrayGenerated = (rolls.length === Object.keys(this.abilityScoreData).length)\n    this.setState({\n      selectedMethod: this.state.selectedMethod,\n      array: rolls,\n      arrayUsed: [],\n      pointsLeft: 27\n    })\n    this.updateSaveable()\n  }\n\n  updateSaveable() {\n    var saveable = Object.keys(this.abilityScoreData).every(a => this.selectedScores[a]);\n    this.props.onUpdate({\n      scores: this.selectedScores,\n      selectedMethod: this.state.selectedMethod,\n      saveable: saveable\n    })\n  }\n\n  render() {\n    const methodOptions = Object.entries(this.methods).map(([m,v]) => {\n      return <option value={m}>{v.displayName}</option>\n    })\n    methodOptions.push(<option hidden value=\"\">--</option>)\n    const selected = this.state.selectedMethod ? this.state.selectedMethod : \"\"\n\n    const scoreSelectors = Object.entries(this.abilityScoreData).map(([k,data]) => {\n      // Determine required data for score display\n      const scoreData = {}\n      switch (this.state.selectedMethod) {\n        case \"carbonRoll\":\n        case \"dndRoll\":\n        case \"carbonArray\":\n          scoreData.isActive = this.arrayGenerated;\n          scoreData.isArray = true;\n          scoreData.selected = this.selectedScores[k]\n          scoreData.array = this.state.array\n          scoreData.arrayUsed = this.state.arrayUsed\n          scoreData.bonus = this.bonuses[k]\n          break;\n        case \"dndPointBuy\":\n          scoreData.isActive = true;\n          scoreData.isArray = false;\n          scoreData.selected = this.selectedScores[k]\n          scoreData.pointsLeft = this.state.pointsLeft\n          scoreData.bonus = this.bonuses[k]\n          break;\n        default:\n          scoreData.isActive = false;\n          break;\n      }\n\n      return <Row><ScoreSelector \n        name={data.name.toUpperCase()}\n        data={scoreData}\n        type={k}\n        onSelect={([k,v]) => this.updateScore(k,v)}\n      /></Row>\n    })\n\n    // Different for Point Buy vs Array\n    var statusView = <div />\n    switch (this.state.selectedMethod) {\n      case \"dndPointBuy\":\n        statusView = <PointBuyViewer pointsLeft={this.state.pointsLeft} />\n        break;\n      case \"carbonRoll\":\n      case \"dndRoll\":\n      case \"carbonArray\":\n        statusView = (\n          <ArrayViewer\n            array={this.state.array}\n            arrayUsed={this.state.arrayUsed}\n            roll={this.methods[this.state.selectedMethod].roll}\n            onRoll={rolls => this.updateArray(rolls)}\n          />)\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Form>\n            <Form.Group>\n              <Form.Label>Select Stat Generation Method</Form.Label>\n                <Form.Control as=\"select\" value={selected} onChange={e => this.changeMethod(e.target.value)}>\n                  {methodOptions}\n                </Form.Control>\n            </Form.Group>\n          </Form>\n        </Row>\n        <Row>\n          <Col md={8}>\n            {scoreSelectors}\n          </Col>\n          <Col md={4}>\n            {statusView}\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nclass AbilitiesStep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.abilityKeys = Object.keys(props.data)\n    this.generationMethod = null;\n    this.abilityScores = {}\n    this.state = {\n      saveable: false\n    };\n  }\n\n  updateAbilityScores(update) {\n    this.abilityKeys.forEach(a => this.abilityScores[a] = update.scores[a]);\n    this.generationMethod = update.selectedMethod;\n    this.setState({saveable: update.saveable});\n  }\n\n  saveAbilityScores() {\n    console.log(this.abilityScores)\n    const abilitiesStep = {\n      generationMethod: this.generationMethod\n    }\n\n    this.props.handleSave({\n      abilitiesStep: abilitiesStep,\n      baseAbilities: this.abilityScores  \n    })\n  }\n\n  render() {\n    return (\n      <Modal className=\"creatorStep\" size=\"lg\" show={this.props.show} onHide={this.props.handleClose} scrollable={true}>\n        <Modal.Header>\n          <Modal.Title>Select Your Ability Scores</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"show-grid\">\n          <AbilityScoreEditor\n            data={this.props.data}\n            current={this.props.current}\n            onUpdate={update => this.updateAbilityScores(update)}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleClose}>Close</Button>\n          <SaveButton value=\"Save Ability Scores\" enabled={this.state.saveable} onClick={() => this.saveAbilityScores()} />\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nexport default AbilitiesStep;","import React from 'react'\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'\n\nimport { SaveButton } from './common'\nimport OriginStep from './origin_step'\nimport AbilitiesStep from './abilities_step'\n\nfunction StepButton(props) {\n  const buttonName = props.value.split(\"_\")\n                          .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n                          .join(' ');\n  switch(props.status) {\n    case 1:\n      return (\n        <Button key={props.value} className=\"stepButton\" size=\"lg\" onClick={() => props.onClick()}>\n          {buttonName}\n        </Button>\n      );\n    case 2:\n      return (\n        <Button key={props.value} className=\"stepButton\" size=\"lg\" variant=\"success\" onClick={() => props.onClick()}>\n          {buttonName}\n        </Button>\n      );\n    default:\n      return (\n        <Button key={props.value} className=\"stepButton\" size=\"lg\" disabled>\n          {buttonName}\n        </Button>\n      );\n  }\n}\n\nclass CharacterNameComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSave = props.onSave\n    this.placeholderText = \"Enter Character Name\"\n    this.name = this.props.name ? this.props.name : \"\"\n    this.state = {\n      edit: props.editingName,\n      saveable: (this.name) ? true : false\n    }\n  }\n\n  toggleEdit() {\n    this.setState({\n      edit: !this.state.edit,\n      saveable: this.state.saveable\n    })\n  }\n\n  handleChange(event) {\n    this.name = event.target.value\n    this.setState({\n      edit: this.state.edit,\n      saveable: this.name ? true: false\n    })\n  }\n\n  saveName() {\n    this.onSave(this.name)\n    this.setState({\n      edit: false,\n      saveable: this.name ? true: false\n    })\n  }\n\n  render() {\n    if (this.state.edit) {\n      return (\n        <Form className=\"characterName\">\n          <Row>\n            <Col md={9}><Form.Control placeholder={this.placeholderText} onChange={e => this.handleChange(e)} value={this.name} /></Col>\n            <Col md={3}><SaveButton value=\"Save Name\" onClick={() => this.saveName()} enabled={this.state.saveable} size=\"lg\"/></Col>\n          </Row>\n        </Form>\n      )\n    } else {\n      var displayValue = (this.name) ? this.name : this.placeholderText;\n      return (\n        <Form className=\"characterName\">\n          <Form.Control plaintext readOnly defaultValue={displayValue} size=\"lg\" onClick={() => this.toggleEdit()} />\n        </Form>\n      )\n    }\n  }\n}\n\n// Used for displaying the character as currently built\nfunction CharacterDisplay(props) {\n  const displayCharacter = JSON.stringify(props.character, null, 4)\n  return (\n    <div style={{\"height\": \"600px\"}}>\n      <pre style={{\"maxHeight\": \"100%\"}}>\n        {displayCharacter}\n      </pre>\n    </div>\n  )\n}\n\nclass Creator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Load all data from json files\n    this.data = this.props.data\n\n    this.steps = [\n      {name: 'origin', status: 1},\n      {name: 'abilities', status: 0},\n      {name: 'career', status: 0},\n      {name: 'class', status: 0},\n      {name: 'buy_gear', status: 0},\n      {name: 'level_up', status: 0},\n      {name: 'next_steps', status: 0}\n    ]\n    this.character = this.getBaseCharacter()\n    this.character.name = null\n    this.character.age = null\n    this.character.features = []\n\n    // Begin with a blank slate. Update this in the future to be able to load a character.\n    this.state = {\n      editingName: false,\n      openStep: null\n    };\n  }\n\n  getBaseCharacter() {\n    const char = JSON.parse(JSON.stringify(this.data.baseCharacterValues))\n\n    // Set level to 1.\n    // TODO: remove this once the class step is added.\n    char.level = 1\n\n    return char\n  }\n\n  openStep(stepName) {\n    this.setState(state => {\n      state.openStep = stepName\n      return state;\n    });\n  }\n\n  closeStep() {\n    this.setState(state => {\n      state.openStep = null;\n      return state;\n    });\n  }\n\n  saveStep(result, stepName) {\n    // Remove all existing features from character for the given step. New features will override it.\n    this.character.features = this.character.features.filter(f => f.step !== stepName)\n\n    // Update the step statuses\n    var updateNext = false\n    this.steps.forEach(step => {\n      if (step.name === stepName) {\n        step.status = 2;\n        updateNext = true;\n      } else if (updateNext) {\n        if (step.status === 0) {\n          step.status = 1;\n        }\n        updateNext = false;\n      }\n    });\n\n    const newFeatures = []\n    console.log(result)\n    Object.entries(result).forEach( ([key,value]) => {\n      switch (key) {\n        case 'features':\n          value.forEach(f => {\n            f.step = stepName;\n            newFeatures.push(f);\n          });\n          break;\n        case 'baseAbilities':\n          console.log(value);\n          this.character.baseAbilities = {};\n          Object.entries(value).forEach(([ability,score]) => {\n            this.character.baseAbilities[ability] = score;\n          })\n          break;\n        default:\n          this.character[key] = value\n          break;\n      }\n    })\n    newFeatures.forEach(f => this.character.features.push(f))\n\n    this.buildCharacter();\n    this.closeStep();\n  }\n\n  saveCharacterName(name) {\n    this.character.name = name;\n    this.setState(state => {\n      state.editingName = false;\n      return state;\n    });\n  }\n\n\n  // Make all the calculations for the character based on raw values and features\n  buildCharacter() {\n    // Create the base character (no features, augmentations, or equipment)\n    // This is what will be modified for tne new build.\n    const build = this.getBaseCharacter()\n\n    // Save the state from previous steps\n    this.steps.forEach(step => {\n      build[step.name + 'Step'] = this.character[step.name + 'Step']\n    })\n\n\n    // Very common: list of proficiencies can be updated from multiple places\n    function adjustProficiencies(proficiencyType, proficiencies) {\n      proficiencies.forEach(p => {\n        if (!build[proficiencyType].includes(p)) {\n          build[proficiencyType].push(p);\n        }\n      })\n    }\n\n    // Set the character ability scores to the base level (determined in ability score step).\n    // Also copy over the baseAbilities for future updates.\n    if (this.character.baseAbilities) {\n      console.log(this.character.baseAbilities);\n      build.baseAbilities = {}\n      build.abilityScores = {}\n      Object.entries(this.character.baseAbilities).forEach(([ability, score]) => {\n        build.baseAbilities[ability] = score;\n        build.abilityScores[ability] = score;\n      });\n    }\n\n    // - Go through every feature on the character and adjust character values\n    build.features = this.character.features;\n    build.features.forEach(feature => {\n      // Static features\n      feature.types.forEach(type => {\n        switch (type) {\n          case \"age\":\n            build.age_range = feature.age;\n            break;\n          case \"base_speed\":\n            build.base_speed = feature.speed\n            break\n          case \"climb_speed\":\n            build.climb_speed = feature.speed\n            break\n          case \"asi\":\n            if (build.abilityScores) {\n              console.log(build.abilityScores)\n              feature.ability_score_increase.forEach(asi => {\n                build.abilityScores[asi.ability] += asi.increase;\n              })\n            }\n            break;\n          case \"skill_proficiency\":\n            adjustProficiencies('skill_proficiencies', feature.skill_proficiencies);\n            break;\n          case \"tool_proficiency\":\n            adjustProficiencies('tool_proficiencies', feature.tool_proficiencies);\n            break;\n          case \"weapon_proficiency\":\n            adjustProficiencies('weapon_proficiencies', feature.weapon_proficiencies);\n            break;\n          case \"armor_proficiency\":\n            adjustProficiencies('armor_proficiencies', feature.armor_proficiencies);\n            break;\n          case \"language_proficiency\":\n            adjustProficiencies('languages', feature.languages);\n            break\n          case \"darkvision\":\n            const existingDarkvision = build.senses.filter(sense => sense.type === 'darkvision')\n            if (existingDarkvision.length > 0)\n              build.senses = build.senses.map(sense => {\n                if (sense.type !== 'darkvision' || sense.range > feature.darkvision_range) {\n                  return sense;\n                } else {\n                  return {type: 'darkvision', range: feature.darkvision_range}\n                }\n              })\n            else {\n              build.senses.push({'type': 'darkvision', 'range': feature.darkvision_range});\n            }\n            break;\n          case \"weapon_override\":\n            build.weapon_overrides[feature.weapon_type] = feature.weapon_override;\n            break;\n          case \"natural_armor\":\n            build.natural_armor = feature.natural_base_ac;\n            break;\n          case \"damage_resistance\":\n            adjustProficiencies('damage_resistances', feature.damage_types);\n            break;\n          case \"bonus_action\":\n            build.bonus_actions.push({name: feature.name, description: feature.description});\n            break;\n          case \"influence\":\n            Object.entries(feature.influence).forEach(([type,value]) => {\n              build.baseInfluence[type] = Math.max(build.baseInfluence[type], value)\n            });\n            break;\n          default:\n            console.log('Missing static: ' + type)\n            break;\n        }\n      })\n\n      // Choices\n      if (feature.hasOwnProperty('choices')) {\n        feature.choices.forEach(choice => {\n          switch(choice.type) {\n            case \"asi\":\n              if (build.abilityScores) {\n                choice.selected.forEach(a => {\n                  build.abilityScores[a] += choice.increase;\n                })\n              }\n              break;\n            case \"skill_proficiency\":\n              adjustProficiencies('skill_proficiencies', choice.selected.map(s => s.key));\n              break;\n            case \"tool_proficiency\":\n              adjustProficiencies('tool_proficiencies', choice.selected.map(s => s.key));\n              break;\n            case \"weapon_proficiency\":\n              adjustProficiencies('weapon_proficiencies', choice.selected.map(s => s.key));\n              break;\n            case \"armor_proficiency\":\n              adjustProficiencies('armor_proficiencies', choice.selected.map(s => s.key));\n              break;\n            case \"language_proficiency\":\n              adjustProficiencies('languages', choice.selected.map(s => s.key));\n              break\n            default:\n              console.log('Missing choice: ' + choice.type)\n              break;\n          }\n        })\n      }\n    })\n\n    // - Calculate Ability Scores Mods\n    if (!build.abilityScores) {\n      // NOTE: Everything after this point requires ability modifiers. If that's not set, break here.\n      this.character = build;\n      return;\n    } else {\n      build.abilityMods = {}\n      Object.entries(build.abilityScores).forEach(([ability,score]) => {\n        build.abilityMods[ability] = Math.floor((score - 10) / 2)\n      })\n    }\n\n    // - Calculate AC (based on armor & helmet)\n    build.armor = this.character.armor\n    build.helmet = this.character.helmet\n    if (build.armor) {\n      const armorStats = this.data.armor[build.armor]\n      switch (armorStats.category) {\n        case \"light\":\n          build.ac = armorStats.base_ac + build.abilityMods.dexterity;\n          break;\n        case \"medium\":\n          build.ac = armorStats.base_ac + Math.max(2, build.abilityMods.dexterity);\n          break;\n        case \"heavy\":\n          build.ac = armorStats.base_ac\n          break;\n        default:\n          build.ac = build.natural_armor + build.abilityMods.dexterity;\n          break;\n      }\n    } else {\n      build.ac = build.natural_armor + build.abilityMods.dexterity;\n    }\n\n    if (build.helmet) {\n      const helmetStats = this.data.armor[build.helmet]\n      build.ac += helmetStats.base_ac\n    }\n\n    // NOTE: Everything after this point requires character level (including proficiency bonus).\n    // If that's not set, break here.\n    build.level = this.character.level\n    if (!build.level) {\n      this.character = build;\n      return;\n    }\n    const proficiency = [2,2,2,2,3,3,3,3,4,4][Math.max(build.level - 1, 0)]\n\n    // - Calculate skill proficiencies (including half and expertise) (and add passive perception to senses)\n    build.skillMods = {}\n    Object.entries(this.data.skills).forEach(([skill,data]) => {\n      const halfBonus = build.skill_half_proficiencies.includes(skill) ? Math.round(proficiency / 2) : 0;\n      const profBonus = build.skill_proficiencies.includes(skill) ? proficiency : 0;\n      const expertiseBonus = build.skill_expertise.includes(skill) ? (2 * proficiency) : 0;\n\n      build.skillMods[skill] = Math.max(halfBonus, profBonus, expertiseBonus);\n    });\n\n    // - Create Attacks (based on weapons)\n    build.weapons = this.character.weapons\n    build.attacks = build.weapons.map(w => {\n      const weapon = JSON.parse(JSON.stringify(this.data.weapons[w.type]))\n\n      // Apply weapon override\n      if (build.weapon_overrides[w.type]) {\n        Object.entries(build.weapon_overrides[w.type]).forEach(([prop,override]) => {\n          console.log(prop)\n          console.log(override)\n          weapon[prop] = override;\n          console.log(weapon)\n        })\n      }\n\n      var abilityMod = build.abilityMods.dexterity; // Most weapons are light guns in Carbon 2185, so we'll use DEX as a default\n      if (['melee','unarmed','heavy_weapons'].includes(weapon.category)) {\n        abilityMod = weapon.properties.includes('finesse') ? Math.max(build.abilityMods.strength, build.abilityMods.dexterity) : build.abilityMods.strength\n      }\n\n      const proficiencyMod = build.weapon_proficiencies.some(p => {\n        return (p.category === weapon.category) || (p.type === w.type)\n      }) ? proficiency : 0;\n\n      // TODO: Add other bonuses, but we'll start with this basic one for now\n      const attackBonus = abilityMod + proficiencyMod\n      const damageRoll = weapon.damage_dice + '+' + abilityMod\n\n      return {\n        type: w.type,\n        name: weapon.name,\n        attackBonus: attackBonus,\n        damageRoll: damageRoll,\n        damageType: weapon.damage_type,\n        range: weapon.range\n      }\n    })\n\n    // TODO: Two-Weapon Fighting\n\n    // - Calculate carrying capacity\n\n    // - Calculate carried weight and encumbrance\n\n    // Finished!\n    this.character = build\n  }\n\n  render() {\n    const renderStepButtons = this.steps.map((step) => {\n        return <Row key={step.name}>\n          <StepButton\n            value={step.name}\n            status={step.status}\n            onClick={() => this.openStep(step.name)}\n          />\n        </Row>\n      })\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col lg={2}>\n              {renderStepButtons}\n            </Col>\n\n            <Col lg={10}>\n              <Row><CharacterNameComponent\n                name={this.character.name}\n                editingName={this.state.editingName}\n                onSave={name => this.saveCharacterName(name)} />\n              </Row>\n              <Row><CharacterDisplay character={this.character} /></Row>\n            </Col>\n          </Row>\n\n          <OriginStep\n            show={this.state.openStep === \"origin\"}\n            current={this.character}\n            data={this.data.origins}\n            featureData={\n              {\n                abilityScores: this.data.abilityScores,\n                tools: this.data.tools,\n                skills: this.data.skills,\n                languages: this.data.languages\n              } \n            }\n            handleClose={() => this.closeStep()}\n            handleSave={result => this.saveStep(result, 'origin')}\n          />\n\n          <AbilitiesStep\n            show={this.state.openStep === \"abilities\"}\n            current={this.character}\n            data={this.data.abilityScores}\n            handleClose={() => this.closeStep()}\n            handleSave={result => this.saveStep(result, 'abilities')}\n          />\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Creator;","import React from 'react'\nimport Creator from './components/creator';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false\n    }\n  };\n\n  snakeToCamel = (str) => str.replace(\n      /([-_][a-z])/g,\n      (group) => group.toUpperCase()\n                      .replace('-', '')\n                      .replace('_', '')\n  );\n\n  // Fetch all the JSON data and update the app when it's loaded\n  fetchData() {\n    if (this.state.loaded) {\n      return;\n    }\n    this.data = {}\n    const data_to_load = [\n      'ability_scores',\n      'ammo',\n      'armor',\n      'gear',\n      'languages',\n      'origins',\n      'skills',\n      'tools',\n      'vices',\n      'weapons',\n      'base_character_values'\n    ];\n\n    Promise.all(data_to_load.map(name => {\n      const url = './json/' + name + '.json'\n      return fetch(url, {headers : { 'Content-Type': 'application/json', 'Accept': 'application/json'}})\n        .then(resp => \n          resp.json().then(data => {\n            const id = this.snakeToCamel(name)\n            this.data[id] = data;\n            return true;\n          })\n        )\n    })).then(r => {\n      this.setState({loaded: true})\n    });\n  }\n\n  render() {\n    this.fetchData()\n    if (!this.state.loaded) {\n      // Update this at some point\n      return <div>LOADING</div>\n    } else {\n      return (\n        <Creator data={this.data} />\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/custom.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}